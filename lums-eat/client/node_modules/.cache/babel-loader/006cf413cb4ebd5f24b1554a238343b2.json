{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/avail-item/avail-item.component.jsx\";\nimport React from 'react';\nimport './avail-item.styles.scss';\n\nconst axios = require('axios');\n\nconst AvailItem = ({\n  ItemID,\n  name,\n  price,\n  availability\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, ItemID), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, (() => {\n    switch (availability) {\n      case \"Yes\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 38\n          }\n        }, \"Available\");\n\n      case \"No\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 35\n          }\n        }, \"Unavailable\");\n\n      default:\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }\n        }, \"-\");\n    }\n  })()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, (() => {\n    switch (availability) {\n      case \"Yes\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"yes\",\n          onClick: () => {\n            let change = {\n              \"ItemID\": ItemID,\n              \"update\": {\n                \"availability\": \"No\"\n              }\n            };\n            axios.post('/menu/update', change).then(res => window.location.reload()).catch(err => console.log(err));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 38\n          }\n        }, \"Pause\");\n\n      case \"No\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"no\",\n          onClick: () => {\n            let change = {\n              \"ItemID\": ItemID,\n              \"update\": {\n                \"availability\": \"Yes\"\n              }\n            };\n            axios.post('/menu/update', change).then(res => window.location.reload()).catch(err => console.log(err));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 35\n          }\n        }, \"Resume\");\n\n      default:\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"button\",\n          onClick: () => alert('button'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, \"button\");\n    }\n  })()));\n};\n\nexport default AvailItem;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/avail-item/avail-item.component.jsx"],"names":["React","axios","require","AvailItem","ItemID","name","price","availability","change","post","then","res","window","location","reload","catch","err","console","log","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAyC;AACvD,sBACE,uDACI;AAAI,IAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBH,MAAxB,CADJ,eAEI;AAAI,IAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,IAAxB,CAFJ,eAGI;AAAI,IAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,KAAxB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAAC,MAAM;AACV,YAAQC,YAAR;AACI,WAAK,KAAL;AAAc,4BAAO;AAAM,UAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;;AACd,WAAK,IAAL;AAAW,4BAAO;AAAM,UAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;;AACX;AAAS,4BAAO;AAAM,UAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAHb;AAKC,GANE,GAAL,CAJJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAAC,MAAM;AACV,YAAQA,YAAR;AACI,WAAK,KAAL;AAAc,4BAAO;AAAM,UAAA,SAAS,EAAG,KAAlB;AAAwB,UAAA,OAAO,EAChD,MAAM;AACF,gBAAIC,MAAM,GAAG;AACT,wBAAUJ,MADD;AAET,wBAAU;AACN,gCAAgB;AADV;AAFD,aAAb;AAKAH,YAAAA,KAAK,CAACQ,IAAN,CAAW,cAAX,EAA2BD,MAA3B,EACKE,IADL,CACWC,GAAD,IAASC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADnB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,WAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;;AAYd,WAAK,IAAL;AAAW,4BAAO;AAAM,UAAA,SAAS,EAAG,IAAlB;AAAuB,UAAA,OAAO,EAC5C,MAAM;AACF,gBAAIR,MAAM,GAAG;AACT,wBAAUJ,MADD;AAET,wBAAU;AACN,gCAAgB;AADV;AAFD,aAAb;AAKAH,YAAAA,KAAK,CAACQ,IAAN,CAAW,cAAX,EAA2BD,MAA3B,EACCE,IADD,CACOC,GAAD,IAASC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADf,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH,WAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AAYX;AAAS,4BAAO;AAAM,UAAA,SAAS,EAAG,QAAlB;AAA2B,UAAA,OAAO,EAAG,MAAMG,KAAK,CAAC,QAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAzBb;AA2BH,GA5BM,GAAL,CAZJ,CADF;AA8CD,CA/CH;;AAiDA,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport './avail-item.styles.scss';\n\nconst axios = require('axios')\n\nconst AvailItem = ({ItemID, name, price, availability}) => {\n    return(\n      <>\n          <td className = 'font'>{ItemID}</td>\n          <td className = 'font'>{name}</td>\n          <td className = 'font'>{price}</td>\n          <td>{(() => {\n            switch (availability) {\n                case \"Yes\":   return <span className = 'font'>Available</span>;\n                case \"No\": return <span className = 'font'>Unavailable</span>;\n                default: return <span className = 'font'>-</span>;\n            }\n            })()}\n          </td>      \n          <td>{(() => {\n            switch (availability) {\n                case \"Yes\":   return <span className = 'yes' onClick ={\n                    () => {\n                        let change = {\n                            \"ItemID\": ItemID,\n                            \"update\": {\n                                \"availability\": \"No\"\n                            }}\n                        axios.post('/menu/update', change)\n                            .then((res) => window.location.reload())\n                            .catch(err => console.log(err))\n                    }}\n                    >Pause</span>;\n                case \"No\": return <span className = 'no' onClick = {\n                    () => {\n                        let change = {\n                            \"ItemID\": ItemID,\n                            \"update\": {\n                                \"availability\": \"Yes\"\n                            }}\n                        axios.post('/menu/update', change)\n                        .then((res) => window.location.reload())\n                        .catch(err => console.log(err))\n                    }}\n                    >Resume</span>;\n                default: return <span className = 'button' onClick ={() => alert('button')}>button</span>;\n        }\n        })()}\n        </td>       \n  \n      </>\n    )\n  };\n\nexport default AvailItem\n"]},"metadata":{},"sourceType":"module"}