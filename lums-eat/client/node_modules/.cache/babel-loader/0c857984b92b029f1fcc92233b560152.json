{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './userfeedback.styles.scss';\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\nconst axios = require('axios');\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let details = {\n        \"UserID\": localStorage.name,\n        // \"ItemID\": this.state.ItemID,\n        \"OrderID\": this.state.OrderID,\n        \"RestaurantID\": this.state.RestaurantID,\n        \"Rating\": this.state.Rating,\n        \"Feedback\": this.state.Feedback\n      };\n      axios.post('/feedback/add', details).then(res => this.setState({\n        text2: 'Feedback has been sent to restaurant!'\n      }), this.setState({\n        text: 'Feedback'\n      }), this.setState({\n        popupshow: true\n      })).catch(err => this.setState({\n        text2: 'Error: Feedback for this order has already been sent to restaurant!'\n      }), this.setState({\n        popupshow: true\n      }));\n    };\n\n    this.refresh = event => {\n      window.location.reload();\n    };\n\n    this.state = {\n      UserID: '',\n      // ItemID: '',\n      OrderID: '',\n      RestaurantID: '',\n      Rating: Number,\n      Feedback: '',\n      popupshow: false,\n      text: 'Feedback!',\n      text2: 'Feedback has been sent to restaurant!'\n    };\n  }\n\n  updateFeedback(event) {\n    this.setState({\n      Feedback: event.target.value\n    });\n  }\n\n  updateRating(event) {\n    this.setState({\n      Rating: event.target.value\n    }); // console.log(event.target.value);\n  }\n\n  componentDidMount() {\n    const {\n      order\n    } = this.props.location.state;\n    const {\n      restaurant\n    } = this.props.location.state; // const { item } = this.props.location.state\n\n    this.setState({\n      RestaurantID: restaurant\n    });\n    this.setState({\n      OrderID: order\n    });\n  }\n\n  renderIcon() {\n    this.setState({\n      UserID: 'CHECK'\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"Function called\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"dic\", {\n      className: \"restaurantpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/orders\",\n      class: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, \"close\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \"Submit\"), \" feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Restaurant:\"), \" \", this.state.RestaurantID.toUpperCase(), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 67\n      }\n    }, \"Order ID:\"), \" \", this.state.OrderID)), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateFeedback.bind(this),\n      value: this.state.Feedback,\n      error: errors.email,\n      id: \"email\",\n      type: \"name\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, errors.email, errors.emailnotfound)), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"demo\",\n      onChange: this.updateRating.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"group1\",\n      value: \"1\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"1\"))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"group1\",\n      value: \"2\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"2\"))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"group1\",\n      value: \"3\",\n      type: \"radio\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"3\"))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"group1\",\n      value: \"4\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"4\"))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"group1\",\n      value: \"5\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter Feedback\",\n      required: true,\n      value: this.state.Feedback,\n      onChange: this.updateFeedback.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.popupshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: () => this.setState({\n        popupshow: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, \" \", this.state.text, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, \" \", this.state.text2, \" \"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, \"Ok\"))))) // <dic className = 'restaurantpage'>\n    //   <div className = 'check'>\n    //       <Link to=\"/orders\" class = \"a\"> <i className=\"material-icons\">close</i> </Link>\n    //     <div>\n    //       <h4>\n    //         <b>Submit</b> feedback\n    //       </h4>\n    //       <p >\n    //         <b>Restaurant:</b> {this.state.RestaurantID.toUpperCase()}, <b>Order ID:</b> {this.state.OrderID}\n    //       </p>\n    //     </div>\n    //     <Form onSubmit = {this.onSubmit}>\n    //       <Form.Label>Rating</Form.Label>\n    //       <div class=\"demo\" onChange={this.updateRating.bind(this)} >\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"1\" type=\"radio\" />\n    //             <span>1</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"2\" type=\"radio\" />\n    //             <span>2</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"3\" type=\"radio\" required />\n    //             <span>3</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"4\" type=\"radio\" />\n    //             <span>4</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"5\" type=\"radio\" />\n    //             <span>5</span>\n    //           </label>\n    //         </span>\n    //       </div>\n    //       <Form.Group controlId=\"Feedback\">\n    //           <Form.Label>Feedback</Form.Label>\n    //           <Form.Control type=\"name\"\n    //                         placeholder=\"Enter Feedback\"\n    //                         required\n    //                         value ={this.state.Feedback}\n    //                         onChange = {this.updateFeedback.bind(this)} />\n    //       </Form.Group>\n    //       <Button variant=\"primary\" type=\"submit\" block>\n    //           Submit\n    //       </Button>\n    //     </Form>\n    //     <Modal show={this.state.popupshow}>\n    //       <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n    //         <Modal.Title> {this.state.text} </Modal.Title>\n    //       </Modal.Header>\n    //       <Modal.Body> {this.state.text2} </Modal.Body>\n    //       <Modal.Footer>\n    //         <Button variant=\"primary\" onClick={this.refresh}>\n    //           Ok\n    //         </Button>\n    //       </Modal.Footer>\n    //     </Modal>\n    //   </div>\n    // </dic>\n    ;\n  }\n\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(UserFeedbackPage); // export default UserFeedbackPage;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx"],"names":["React","Form","Button","Modal","PropTypes","Link","connect","logoutUser","axios","require","UserFeedbackPage","Component","constructor","onSubmit","e","preventDefault","details","localStorage","name","state","OrderID","RestaurantID","Rating","Feedback","post","then","res","setState","text2","text","popupshow","catch","err","refresh","event","window","location","reload","UserID","Number","updateFeedback","target","value","updateRating","componentDidMount","order","props","restaurant","renderIcon","render","toUpperCase","bind","errors","email","classnames","invalid","emailnotfound","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport './userfeedback.styles.scss';\n\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\n\nconst axios = require('axios')\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n    \n      this.state={\n        UserID: '',\n        // ItemID: '',\n        OrderID: '',\n        RestaurantID: '',\n        Rating: Number,\n        Feedback: '',\n\n        popupshow: false,\n        text: 'Feedback!',\n        text2: 'Feedback has been sent to restaurant!'\n      }  \n  }\n\n  updateFeedback(event) {\n    this.setState({Feedback: event.target.value})\n  }\n\n  updateRating(event) {\n    this.setState({Rating: event.target.value})\n    // console.log(event.target.value);\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    let details = {\n      \"UserID\": localStorage.name,\n      // \"ItemID\": this.state.ItemID,\n\t    \"OrderID\": this.state.OrderID,\n      \"RestaurantID\": this.state.RestaurantID,\n      \"Rating\": this.state.Rating,\n\t    \"Feedback\": this.state.Feedback\n      }\n    axios.post('/feedback/add', details)\n      .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({text: 'Feedback'}), this.setState({popupshow: true}))\n      .catch(err => this.setState({text2: 'Error: Feedback for this order has already been sent to restaurant!'}), this.setState({popupshow: true}))\n  };\n\n  refresh = (event) => {\n    window.location.reload();\n  }\n\n  componentDidMount( )\n    {\n      const { order } = this.props.location.state\n      const { restaurant } = this.props.location.state\n      // const { item } = this.props.location.state\n      \n      this.setState({RestaurantID: restaurant})\n      this.setState({OrderID: order})\n    }\n\n  renderIcon(){\n    this.setState({UserID: 'CHECK'})\n    return(\n      <div>Function called</div>\n    )\n  }\n\n  render() {\n    return (\n      \n\n<dic className = 'restaurantpage'>\n<div className = 'check'>\n    <Link to=\"/orders\" class = \"a\"> <i className=\"material-icons\">close</i> </Link>\n  <div>\n    <h4>\n      <b>Submit</b> feedback\n    </h4>\n    <p >\n      <b>Restaurant:</b> {this.state.RestaurantID.toUpperCase()}, <b>Order ID:</b> {this.state.OrderID}\n    </p>\n  </div>\n\n  <Form onSubmit = {this.onSubmit}>\n\n  {/* <form noValidate onSubmit={this.onSubmit}> */}\n      <div className=\"input-field col\">\n        <input\n          onChange = {this.updateFeedback.bind(this)}\n          value ={this.state.Feedback}\n          error={errors.email}\n          id=\"email\"\n          type=\"name\"\n          className={classnames(\"\", {\n            invalid: errors.email || errors.emailnotfound\n          })}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <span className=\"red-text\">\n          {errors.email}\n          {errors.emailnotfound}\n        </span>\n      </div>\n                \n\n\n    <Form.Label>Rating</Form.Label>\n    <div class=\"demo\" onChange={this.updateRating.bind(this)} >\n      <span>\n        <label>\n          <input name=\"group1\" value=\"1\" type=\"radio\" />\n          <span>1</span>\n        </label>\n      </span>\n      <span>\n        <label>\n          <input name=\"group1\" value=\"2\" type=\"radio\" />\n          <span>2</span>\n        </label>\n      </span>\n      <span>\n        <label>\n          <input name=\"group1\" value=\"3\" type=\"radio\" required />\n          <span>3</span>\n        </label>\n      </span>\n      <span>\n        <label>\n          <input name=\"group1\" value=\"4\" type=\"radio\" />\n          <span>4</span>\n        </label>\n      </span>\n      <span>\n        <label>\n          <input name=\"group1\" value=\"5\" type=\"radio\" />\n          <span>5</span>\n        </label>\n      </span>\n    </div>\n\n    <Form.Group controlId=\"Feedback\">\n        <Form.Label>Feedback</Form.Label>\n        <Form.Control type=\"name\"\n                      placeholder=\"Enter Feedback\"\n                      required\n                      value ={this.state.Feedback}\n                      onChange = {this.updateFeedback.bind(this)} />\n    </Form.Group>\n\n    <Button variant=\"primary\" type=\"submit\" block>\n        Submit\n    </Button>\n  </Form>\n\n  <Modal show={this.state.popupshow}>\n    <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n      <Modal.Title> {this.state.text} </Modal.Title>\n    </Modal.Header>\n    <Modal.Body> {this.state.text2} </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={this.refresh}>\n        Ok\n      </Button>\n    </Modal.Footer>\n  </Modal>\n\n</div>\n</dic>\n\n      // <dic className = 'restaurantpage'>\n      //   <div className = 'check'>\n      //       <Link to=\"/orders\" class = \"a\"> <i className=\"material-icons\">close</i> </Link>\n      //     <div>\n      //       <h4>\n      //         <b>Submit</b> feedback\n      //       </h4>\n      //       <p >\n      //         <b>Restaurant:</b> {this.state.RestaurantID.toUpperCase()}, <b>Order ID:</b> {this.state.OrderID}\n      //       </p>\n      //     </div>\n\n      //     <Form onSubmit = {this.onSubmit}>\n\n      //       <Form.Label>Rating</Form.Label>\n      //       <div class=\"demo\" onChange={this.updateRating.bind(this)} >\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"1\" type=\"radio\" />\n      //             <span>1</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"2\" type=\"radio\" />\n      //             <span>2</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"3\" type=\"radio\" required />\n      //             <span>3</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"4\" type=\"radio\" />\n      //             <span>4</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"5\" type=\"radio\" />\n      //             <span>5</span>\n      //           </label>\n      //         </span>\n      //       </div>\n\n      //       <Form.Group controlId=\"Feedback\">\n      //           <Form.Label>Feedback</Form.Label>\n      //           <Form.Control type=\"name\"\n      //                         placeholder=\"Enter Feedback\"\n      //                         required\n      //                         value ={this.state.Feedback}\n      //                         onChange = {this.updateFeedback.bind(this)} />\n      //       </Form.Group>\n\n      //       <Button variant=\"primary\" type=\"submit\" block>\n      //           Submit\n      //       </Button>\n      //     </Form>\n\n      //     <Modal show={this.state.popupshow}>\n      //       <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n      //         <Modal.Title> {this.state.text} </Modal.Title>\n      //       </Modal.Header>\n      //       <Modal.Body> {this.state.text2} </Modal.Body>\n      //       <Modal.Footer>\n      //         <Button variant=\"primary\" onClick={this.refresh}>\n      //           Ok\n      //         </Button>\n      //       </Modal.Footer>\n      //     </Modal>\n\n      //   </div>\n      // </dic>\n    );\n  }\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(UserFeedbackPage);\n\n// export default UserFeedbackPage;"]},"metadata":{},"sourceType":"module"}