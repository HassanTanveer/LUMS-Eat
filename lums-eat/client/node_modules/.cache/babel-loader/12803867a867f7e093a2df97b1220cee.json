{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx\";\nimport React from 'react';\nimport UserFeedbackPage from '../../components/userfeedbackpage/userfeedbackpage.component';\nimport './userfeedback.styles.scss';\n\nconst UserFeedback = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"restaurantpage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, \"check\", this.state.complete.map(({\n  id,\n  ...otherSectionProps\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ComleteOrderTable, Object.assign({\n  key: id\n}, otherSectionProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n})))));\n\nexport default UserFeedback; // import React from 'react';\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Modal from 'react-bootstrap/Modal'\n// import './userfeedback.styles.scss';\n// import PropTypes from \"prop-types\";\n// // import { Link } from 'react-router-dom';\n// import { connect } from \"react-redux\";\n// import { logoutUser } from \"../../redux/actions/authActions\";\n// const axios = require('axios')\n// class UserFeedbackPage extends React.Component {\n//   constructor() {\n//     super();\n//       this.state={\n//         UserID: '',\n//         ItemID: '',\n//         OrderID: '',\n//         RestaurantID: '',\n//         Feedback: '',\n//         popupshow: false,\n//         text: 'Feedback Sent!',\n//         text2: 'Feedback has been sent to restaurant!'\n//         // collection: []\n//       }  \n//   }\n//   updateUserID(event) {\n//     this.setState({UserID: event.target.value})\n//   }\n//   updateItemID(event) {\n//     this.setState({ItemID: event.target.value})\n//   }\n//   updateOrderID(event) {\n//     this.setState({OrderID: event.target.value})\n//   }\n//   updateRestaurantID(event) {\n//     this.setState({RestaurantID: event.target.value})\n//   }\n//   updateFeedback(event) {\n//     this.setState({Feedback: event.target.value})\n//   }\n//   handleSubmit = (text) => (event) => {\n//     event.preventDefault();\n//     let details = {\n//       \"UserID\": text,\n//       \"ItemID\": this.state.ItemID,\n// \t    \"OrderID\": this.state.OrderID,\n// \t    \"RestaurantID\": this.state.RestaurantID,\n// \t    \"Feedback\": this.state.Feedback\n//       }\n//     axios.post('/feedback/add', details)\n//       .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({popupshow: true}))\n//       .catch(err => this.setState({text: 'Error'}), this.setState({text2: 'Could not send feedback!'}), this.setState({popupshow: true}))\n//   }\n//   refresh = (event) => {\n//     window.location.reload();\n//   }\n//   // componentDidMount( )\n//   //   {\n//   //    //console.log(`This is match ${this.props.match.params.id}`)\n//   //     fetch(`/menu/find/${this.props.match.params.id}`)\n//   //       .then(res=> res.json())\n//   //       .then(collection => this.setState({collection}))\n//   //   }\n//   // componentDidMount( )\n//   //   {\n//   //     const {fromNotifications} = this.props.location.state\n//   //     // fetch(`/menu/find/${this.props.match.params.id}`)\n//   //     //   .then(res=> res.json())\n//   //     //   .then(collection => this.setState({collection}))\n//   //   }\n//   renderIcon(){\n//     this.setState({UserID: 'CHECK'})\n//     return(\n//       <div>Function called</div>\n//     )\n//   }\n//   render() {\n//     // const { fromNotifications } = this.props.location.state;\n//     const { user } = this.props.auth;\n//     return (\n//       <dic className = 'restaurantpage'>\n//         <div className = 'check'>\n//         {/* {fromNotifications.check} */}\n//           {/* <h1>Submit Feedback</h1> */}\n//           {/* {user.name ? (\n//             <b>Hey there, {user.name}, {user.id}, {fromNotifications.check}</b>\n//           ) : (\n//             <b>Hey there!</b>\n//           )} */}\n//           {/* <h1>Provide Feedback</h1> */}\n//           <Form onSubmit = {this.handleSubmit(user.name.toString())}>\n//             {/* <Form.Group controlId=\"UserID\">\n//                   <Form.Label>User ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'userid'\n//                                 placeholder=\"Enter user ID\"\n//                                 required\n//                                 // value = {this.state.UserID}\n//                                 value = {user.name}\n//                                 onChange = {this.updateUserID.bind(this)} \n//                                 />\n//               </Form.Group> */}\n//               <Form.Group controlId=\"ItemID\">\n//                   <Form.Label>Item ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'itemid'\n//                                 placeholder=\"Enter item ID\"\n//                                 required\n//                                 value = {this.state.ItemID}\n//                                 onChange = {this.updateItemID.bind(this)} />\n//               </Form.Group>\n//               <Form.Group controlId=\"OrderID\">\n//                   <Form.Label>Order ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'orderid'\n//                                 placeholder=\"Enter order ID\"\n//                                 required\n//                                 value = {this.state.OrderID}\n//                                 onChange = {this.updateOrderID.bind(this)} />\n//               </Form.Group>\n//               {/* <Form.Group controlId=\"Price\">\n//                   <Form.Label>Price</Form.Label>\n//                   <Form.Control type=\"number\"\n//                                 placeholder=\"Enter price in pkr\"\n//                                 required\n//                                 value ={this.state.price}\n//                                 onChange = {this.updatePrice.bind(this)} />\n//               </Form.Group> */}\n//               <Form.Group controlId=\"RestaurantID\">\n//                   <Form.Label>RestaurantID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 placeholder=\"Enter Restaurant ID\"\n//                                 required\n//                                 value ={this.state.RestaurantID}\n//                                 onChange = {this.updateRestaurantID.bind(this)} />\n//               </Form.Group>\n//               <Form.Group controlId=\"Feedback\">\n//                   <Form.Label>Feedback</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 placeholder=\"Enter Feedback\"\n//                                 required\n//                                 value ={this.state.Feedback}\n//                                 onChange = {this.updateFeedback.bind(this)} />\n//               </Form.Group>\n//               <Button variant=\"primary\" type=\"submit\" block>\n//                   Submit\n//               </Button>\n//               <Modal show={this.state.popupshow}>\n//                 <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n//                   <Modal.Title> {this.state.text} </Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body> {this.state.text2} </Modal.Body>\n//                 <Modal.Footer>\n//                   <Button variant=\"primary\" onClick={this.refresh}>\n//                     Ok\n//                   </Button>\n//                 </Modal.Footer>\n//               </Modal>\n//           </Form>\n//         </div>\n//       </dic>\n//     );\n//   }\n// }\n// UserFeedbackPage.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// });\n// export default connect(\n//   mapStateToProps,\n//   { logoutUser }\n// )(UserFeedbackPage);\n// // export default UserFeedbackPage;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx"],"names":["React","UserFeedbackPage","UserFeedback","state","complete","map","id","otherSectionProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,8DAA7B;AAEA,OAAO,4BAAP;;AAEA,MAAMC,YAAY,GAAG,mBACnB;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAGG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,CAAC;AAAEC,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAD,kBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,iBAAD;AAAmB,EAAA,GAAG,EAAED;AAAxB,GAAgCC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADA,CADD,CAHH,CADF;;AAYA,eAAeL,YAAfsourcesContent":["import React from 'react';\n\nimport UserFeedbackPage from '../../components/userfeedbackpage/userfeedbackpage.component';\n\nimport './userfeedback.styles.scss';\n\nconst UserFeedback = () => (\n  <div className='restaurantpage'>\n    check\n    {/* <UserFeedbackPage {...otherSectionProps}/> */}\n    {this.state.complete.map(({ id, ...otherSectionProps }) => (\n      <tr>\n      <ComleteOrderTable key={id} {...otherSectionProps} />\n      </tr>\n    ))}\n  </div>\n);\n\nexport default UserFeedback;\n\n// import React from 'react';\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Modal from 'react-bootstrap/Modal'\n// import './userfeedback.styles.scss';\n\n// import PropTypes from \"prop-types\";\n// // import { Link } from 'react-router-dom';\n// import { connect } from \"react-redux\";\n// import { logoutUser } from \"../../redux/actions/authActions\";\n\n// const axios = require('axios')\n\n// class UserFeedbackPage extends React.Component {\n//   constructor() {\n//     super();\n    \n//       this.state={\n//         UserID: '',\n//         ItemID: '',\n//         OrderID: '',\n//         RestaurantID: '',\n//         Feedback: '',\n\n//         popupshow: false,\n//         text: 'Feedback Sent!',\n//         text2: 'Feedback has been sent to restaurant!'\n\n//         // collection: []\n//       }  \n//   }\n\n//   updateUserID(event) {\n//     this.setState({UserID: event.target.value})\n//   }\n\n//   updateItemID(event) {\n//     this.setState({ItemID: event.target.value})\n//   }\n\n//   updateOrderID(event) {\n//     this.setState({OrderID: event.target.value})\n//   }\n\n//   updateRestaurantID(event) {\n//     this.setState({RestaurantID: event.target.value})\n//   }\n\n//   updateFeedback(event) {\n//     this.setState({Feedback: event.target.value})\n//   }\n\n//   handleSubmit = (text) => (event) => {\n//     event.preventDefault();\n//     let details = {\n//       \"UserID\": text,\n//       \"ItemID\": this.state.ItemID,\n// \t    \"OrderID\": this.state.OrderID,\n// \t    \"RestaurantID\": this.state.RestaurantID,\n// \t    \"Feedback\": this.state.Feedback\n//       }\n//     axios.post('/feedback/add', details)\n//       .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({popupshow: true}))\n//       .catch(err => this.setState({text: 'Error'}), this.setState({text2: 'Could not send feedback!'}), this.setState({popupshow: true}))\n//   }\n\n//   refresh = (event) => {\n//     window.location.reload();\n//   }\n\n//   // componentDidMount( )\n//   //   {\n//   //    //console.log(`This is match ${this.props.match.params.id}`)\n//   //     fetch(`/menu/find/${this.props.match.params.id}`)\n//   //       .then(res=> res.json())\n//   //       .then(collection => this.setState({collection}))\n//   //   }\n \n//   // componentDidMount( )\n//   //   {\n//   //     const {fromNotifications} = this.props.location.state\n//   //     // fetch(`/menu/find/${this.props.match.params.id}`)\n//   //     //   .then(res=> res.json())\n//   //     //   .then(collection => this.setState({collection}))\n//   //   }\n\n//   renderIcon(){\n//     this.setState({UserID: 'CHECK'})\n//     return(\n//       <div>Function called</div>\n//     )\n//   }\n\n//   render() {\n//     // const { fromNotifications } = this.props.location.state;\n\n//     const { user } = this.props.auth;\n//     return (\n//       <dic className = 'restaurantpage'>\n//         <div className = 'check'>\n//         {/* {fromNotifications.check} */}\n//           {/* <h1>Submit Feedback</h1> */}\n//           {/* {user.name ? (\n//             <b>Hey there, {user.name}, {user.id}, {fromNotifications.check}</b>\n//           ) : (\n//             <b>Hey there!</b>\n//           )} */}\n\n//           {/* <h1>Provide Feedback</h1> */}\n          \n//           <Form onSubmit = {this.handleSubmit(user.name.toString())}>\n//             {/* <Form.Group controlId=\"UserID\">\n//                   <Form.Label>User ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'userid'\n//                                 placeholder=\"Enter user ID\"\n//                                 required\n//                                 // value = {this.state.UserID}\n//                                 value = {user.name}\n//                                 onChange = {this.updateUserID.bind(this)} \n//                                 />\n//               </Form.Group> */}\n\n//               <Form.Group controlId=\"ItemID\">\n//                   <Form.Label>Item ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'itemid'\n//                                 placeholder=\"Enter item ID\"\n//                                 required\n//                                 value = {this.state.ItemID}\n//                                 onChange = {this.updateItemID.bind(this)} />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"OrderID\">\n//                   <Form.Label>Order ID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 className = 'orderid'\n//                                 placeholder=\"Enter order ID\"\n//                                 required\n//                                 value = {this.state.OrderID}\n//                                 onChange = {this.updateOrderID.bind(this)} />\n//               </Form.Group>\n\n//               {/* <Form.Group controlId=\"Price\">\n//                   <Form.Label>Price</Form.Label>\n//                   <Form.Control type=\"number\"\n//                                 placeholder=\"Enter price in pkr\"\n//                                 required\n//                                 value ={this.state.price}\n//                                 onChange = {this.updatePrice.bind(this)} />\n//               </Form.Group> */}\n\n//               <Form.Group controlId=\"RestaurantID\">\n//                   <Form.Label>RestaurantID</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 placeholder=\"Enter Restaurant ID\"\n//                                 required\n//                                 value ={this.state.RestaurantID}\n//                                 onChange = {this.updateRestaurantID.bind(this)} />\n//               </Form.Group>\n\n//               <Form.Group controlId=\"Feedback\">\n//                   <Form.Label>Feedback</Form.Label>\n//                   <Form.Control type=\"name\"\n//                                 placeholder=\"Enter Feedback\"\n//                                 required\n//                                 value ={this.state.Feedback}\n//                                 onChange = {this.updateFeedback.bind(this)} />\n//               </Form.Group>\n\n//               <Button variant=\"primary\" type=\"submit\" block>\n//                   Submit\n//               </Button>\n\n//               <Modal show={this.state.popupshow}>\n//                 <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n//                   <Modal.Title> {this.state.text} </Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body> {this.state.text2} </Modal.Body>\n//                 <Modal.Footer>\n//                   <Button variant=\"primary\" onClick={this.refresh}>\n//                     Ok\n//                   </Button>\n//                 </Modal.Footer>\n//               </Modal>\n//           </Form>\n//         </div>\n//       </dic>\n//     );\n//   }\n// }\n\n// UserFeedbackPage.propTypes = {\n//   logoutUser: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   { logoutUser }\n// )(UserFeedbackPage);\n\n// // export default UserFeedbackPage;"]},"metadata":{},"sourceType":"module"}