{"ast":null,"code":"import isEmpty from \"is-empty\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  if (isEmpty(cartItems)) {\n    return [...cartItems, { ...cartItemToAdd,\n      quantity: 1\n    }];\n  } else {\n    const existingCartItem = cartItems.find(cartItem => cartItem.ItemID === cartItemToAdd.ItemID);\n    let z;\n    cartItems.map(cartItem => cartItem.RestaurantID ? z = 2 : z = 1);\n\n    if (z === 1) {\n      return [...cartItems, { ...cartItemToAdd,\n        quantity: 1\n      }];\n    }\n\n    if (existingCartItem) {\n      return cartItems.map(cartItem => cartItem.ItemID === cartItemToAdd.ItemID ? { ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem);\n    }\n\n    let a;\n    cartItems.map(cartItem => cartItem.RestaurantID === cartItemToAdd.RestaurantID ? a = 2 : a = 1);\n\n    if (a === 2) {\n      return [...cartItems, { ...cartItemToAdd,\n        quantity: 1\n      }];\n    } else {\n      return [...cartItems];\n    }\n  }\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.ItemID === cartItemToRemove.ItemID);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.ItemID !== cartItemToRemove.ItemID);\n  }\n\n  return cartItems.map(cartItem => cartItem.ItemID === cartItemToRemove.ItemID ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/redux/cart/cart.utils.js"],"names":["isEmpty","addItemToCart","cartItems","cartItemToAdd","quantity","existingCartItem","find","cartItem","ItemID","z","map","RestaurantID","a","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAGzD,MAAGH,OAAO,CAACE,SAAD,CAAV,EAAsB;AACpB,WAAO,CAAC,GAAGA,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAf,CAAP;AACD,GAFD,MAGI;AAEF,UAAMC,gBAAgB,GAAGH,SAAS,CAACI,IAAV,CACzBC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBL,aAAa,CAACK,MADrB,CAAzB;AAIF,QAAIC,CAAJ;AAEAP,IAAAA,SAAS,CAACQ,GAAV,CAAcH,QAAQ,IACpBA,QAAQ,CAACI,YAAT,GAA0BF,CAAC,GAAG,CAA9B,GACKA,CAAC,GAAG,CAFX;;AAMA,QAAGA,CAAC,KAAG,CAAP,EAAS;AACP,aAAO,CAAC,GAAGP,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAf,CAAP;AACD;;AAED,QAAIC,gBAAJ,EAAsB;AACpB,aAAOH,SAAS,CAACQ,GAAV,CAAcH,QAAQ,IAC3BA,QAAQ,CAACC,MAAT,KAAoBL,aAAa,CAACK,MAAlC,GACK,EAAE,GAAGD,QAAL;AAAeH,QAAAA,QAAQ,EAAEG,QAAQ,CAACH,QAAT,GAAoB;AAA7C,OADL,GAEKG,QAHA,CAAP;AAKD;;AAED,QAAIK,CAAJ;AAEAV,IAAAA,SAAS,CAACQ,GAAV,CAAcH,QAAQ,IACpBA,QAAQ,CAACI,YAAT,KAA0BR,aAAa,CAACQ,YAAxC,GACMC,CAAC,GAAC,CADR,GAEKA,CAAC,GAAG,CAHX;;AAMA,QAAGA,CAAC,KAAG,CAAP,EAAS;AACP,aAAO,CAAC,GAAGV,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAf,CAAP;AACD,KAFD,MAGI;AACF,aAAO,CAAC,GAAGF,SAAJ,CAAP;AACD;AAAC;AACH,CA9CM;AAgDP,OAAO,MAAMW,kBAAkB,GAAG,CAACX,SAAD,EAAYY,gBAAZ,KAAiC;AACjE,QAAMT,gBAAgB,GAAGH,SAAS,CAACI,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBM,gBAAgB,CAACN,MAD1B,CAAzB;;AAIA,MAAIH,gBAAgB,CAACD,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOF,SAAS,CAACa,MAAV,CAAiBR,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBM,gBAAgB,CAACN,MAAlE,CAAP;AACD;;AAED,SAAON,SAAS,CAACQ,GAAV,CAAcH,QAAQ,IAC3BA,QAAQ,CAACC,MAAT,KAAoBM,gBAAgB,CAACN,MAArC,GACI,EAAE,GAAGD,QAAL;AAAeH,IAAAA,QAAQ,EAAEG,QAAQ,CAACH,QAAT,GAAoB;AAA7C,GADJ,GAEIG,QAHC,CAAP;AAKD,CAdM","sourcesContent":["import isEmpty from \"is-empty\";\r\n\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n\r\n  \r\n  if(isEmpty(cartItems)){\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1}];\r\n  }\r\n  else{  \r\n    \r\n    const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.ItemID === cartItemToAdd.ItemID\r\n    );\r\n\r\n  let z\r\n\r\n  cartItems.map(cartItem =>\r\n    cartItem.RestaurantID  ? (z = 2)\r\n      : (z = 1)\r\n  );\r\n\r\n  \r\n  if(z===1){\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1}];\r\n  }\r\n    \r\n  if (existingCartItem) {\r\n    return cartItems.map(cartItem =>\r\n      cartItem.ItemID === cartItemToAdd.ItemID\r\n        ? ({ ...cartItem, quantity: cartItem.quantity + 1 })\r\n        : (cartItem)\r\n    );\r\n  }\r\n\r\n  let a\r\n\r\n  cartItems.map(cartItem =>\r\n    cartItem.RestaurantID === cartItemToAdd.RestaurantID\r\n      ? ( a=2 )\r\n      : (a = 1)\r\n  );\r\n \r\n  if(a===2){\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  }\r\n  else{\r\n    return [...cartItems];\r\n  }}\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.ItemID === cartItemToRemove.ItemID\r\n  );\r\n\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter(cartItem => cartItem.ItemID !== cartItemToRemove.ItemID);\r\n  }\r\n\r\n  return cartItems.map(cartItem =>\r\n    cartItem.ItemID === cartItemToRemove.ItemID\r\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}