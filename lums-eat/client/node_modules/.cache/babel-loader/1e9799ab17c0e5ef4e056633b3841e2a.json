{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\n\nvar noop = function noop() {};\n/**\r\n * @memberOf Dropdown\r\n * @param {object}  options\r\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\r\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\r\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\r\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\r\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\r\n */\n\n\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\r\n   * A render prop that returns a Menu element. The `props`\r\n   * argument should spread through to **a component that can accept a ref**.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   alignEnd: boolean,\r\n   *   close: (?SyntheticEvent) => void,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\r\n   * Controls the visible state of the menu, generally this is\r\n   * provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\n  show: PropTypes.bool,\n\n  /**\r\n   * Aligns the dropdown menu to the 'end' of it's placement position.\r\n   * Generally this is provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\n  popperConfig: PropTypes.object,\n\n  /**\r\n   * Override the default event used by RootCloseWrapper.\r\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n/**\r\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\r\n *\r\n * @displayName DropdownMenu\r\n * @memberOf Dropdown\r\n */\n\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/node_modules/react-overlays/esm/DropdownMenu.js"],"names":["_objectWithoutPropertiesLoose","_extends","PropTypes","React","useContext","useRef","useCallbackRef","DropdownContext","usePopper","toModifierMap","useRootClose","noop","useDropdownMenu","options","_modifiers$arrow","context","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","_ref","drop","setMenu","menuElement","toggleElement","placement","modifiers","popper","enabled","eventListeners","arrow","element","menu","menuProps","ref","id","childArgs","hasShown","close","props","style","styles","arrowProps","arrowStyles","clickTrigger","disabled","propTypes","children","func","isRequired","bool","oneOf","object","string","defaultProps","DropdownMenu","_ref2","args","createElement","Fragment","displayName"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;AACA;;;;;;;;;;;AAWA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,MAAIC,gBAAJ;;AAEA,MAAID,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIE,OAAO,GAAGX,UAAU,CAACG,eAAD,CAAxB;;AAEA,MAAIS,eAAe,GAAGV,cAAc,EAApC;AAAA,MACIW,YAAY,GAAGD,eAAe,CAAC,CAAD,CADlC;AAAA,MAEIE,cAAc,GAAGF,eAAe,CAAC,CAAD,CAFpC;;AAIA,MAAIG,WAAW,GAAGd,MAAM,CAAC,KAAD,CAAxB;AACA,MAAIe,QAAQ,GAAGP,OAAf;AAAA,MACIQ,IAAI,GAAGD,QAAQ,CAACC,IADpB;AAAA,MAEIC,cAAc,GAAGF,QAAQ,CAACE,cAF9B;AAAA,MAGIC,qBAAqB,GAAGH,QAAQ,CAACI,YAHrC;AAAA,MAIIA,YAAY,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAJ3D;AAAA,MAKIE,kBAAkB,GAAGL,QAAQ,CAACZ,SALlC;AAAA,MAMIkB,eAAe,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,CAAC,CAACV,OAAlC,GAA4CU,kBANlE;AAOA,MAAIE,IAAI,GAAG,CAACZ,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACY,IAApC,KAA6C,IAA7C,GAAoDd,OAAO,CAACc,IAA5D,GAAmEZ,OAAO,CAACY,IAAtF;AACA,MAAIC,QAAQ,GAAG,CAACb,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACa,QAApC,KAAiD,IAAjD,GAAwDf,OAAO,CAACe,QAAhE,GAA2Eb,OAAO,CAACa,QAAlG;;AAEA,MAAID,IAAI,IAAI,CAACR,WAAW,CAACU,OAAzB,EAAkC;AAChCV,IAAAA,WAAW,CAACU,OAAZ,GAAsB,IAAtB;AACD;;AAED,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AACxChB,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACiB,MAAR,CAAe,KAAf,EAAsBD,CAAtB,CAA3B;AACD,GAFD;;AAIA,MAAIE,IAAI,GAAGlB,OAAO,IAAI,EAAtB;AAAA,MACImB,IAAI,GAAGD,IAAI,CAACC,IADhB;AAAA,MAEIC,OAAO,GAAGF,IAAI,CAACE,OAFnB;AAAA,MAGIC,WAAW,GAAGH,IAAI,CAACG,WAHvB;AAAA,MAIIC,aAAa,GAAGJ,IAAI,CAACI,aAJzB;;AAMA,MAAIC,SAAS,GAAGV,QAAQ,GAAG,YAAH,GAAkB,cAA1C;AACA,MAAIM,IAAI,KAAK,IAAb,EAAmBI,SAAS,GAAGV,QAAQ,GAAG,SAAH,GAAe,WAAnC,CAAnB,KAAuE,IAAIM,IAAI,KAAK,OAAb,EAAsBI,SAAS,GAAGV,QAAQ,GAAG,WAAH,GAAiB,aAArC,CAAtB,KAA8E,IAAIM,IAAI,KAAK,MAAb,EAAqBI,SAAS,GAAGV,QAAQ,GAAG,UAAH,GAAgB,YAApC;AAC1K,MAAIW,SAAS,GAAG9B,aAAa,CAACe,YAAY,CAACe,SAAd,CAA7B;AACA,MAAIC,MAAM,GAAGhC,SAAS,CAAC6B,aAAD,EAAgBD,WAAhB,EAA6BnC,QAAQ,CAAC,EAAD,EAAKuB,YAAL,EAAmB;AAC5Ec,IAAAA,SAAS,EAAEA,SADiE;AAE5EG,IAAAA,OAAO,EAAE,CAAC,EAAEf,eAAe,IAAIC,IAArB,CAFkE;AAG5EY,IAAAA,SAAS,EAAEtC,QAAQ,CAAC,EAAD,EAAKsC,SAAL,EAAgB;AACjCG,MAAAA,cAAc,EAAE;AACdD,QAAAA,OAAO,EAAE,CAAC,CAACd;AADG,OADiB;AAIjCgB,MAAAA,KAAK,EAAE1C,QAAQ,CAAC,EAAD,EAAKsC,SAAS,CAACI,KAAf,EAAsB;AACnCF,QAAAA,OAAO,EAAE,CAAC,CAACxB,YADwB;AAEnCJ,QAAAA,OAAO,EAAEZ,QAAQ,CAAC,EAAD,EAAK,CAACa,gBAAgB,GAAGyB,SAAS,CAACI,KAA9B,KAAwC,IAAxC,GAA+C,KAAK,CAApD,GAAwD7B,gBAAgB,CAACD,OAA9E,EAAuF;AACtG+B,UAAAA,OAAO,EAAE3B;AAD6F,SAAvF;AAFkB,OAAtB,CAJkB;AAUjCI,MAAAA,IAAI,EAAEpB,QAAQ,CAAC;AACbwC,QAAAA,OAAO,EAAE,CAAC,CAACpB;AADE,OAAD,EAEXkB,SAAS,CAAClB,IAFC;AAVmB,KAAhB;AAHyD,GAAnB,CAArC,CAAtB;AAkBA,MAAIwB,IAAJ;AACA,MAAIC,SAAS,GAAG;AACdC,IAAAA,GAAG,EAAEZ,OAAO,IAAIxB,IADF;AAEd,uBAAmB0B,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACW;AAFpD,GAAhB;AAIA,MAAIC,SAAS,GAAG;AACdtB,IAAAA,IAAI,EAAEA,IADQ;AAEdC,IAAAA,QAAQ,EAAEA,QAFI;AAGdsB,IAAAA,QAAQ,EAAE/B,WAAW,CAACU,OAHR;AAIdsB,IAAAA,KAAK,EAAErB;AAJO,GAAhB;;AAOA,MAAI,CAACJ,eAAL,EAAsB;AACpBmB,IAAAA,IAAI,GAAG5C,QAAQ,CAAC,EAAD,EAAKgD,SAAL,EAAgB;AAC7BG,MAAAA,KAAK,EAAEN;AADsB,KAAhB,CAAf;AAGD,GAJD,MAIO;AACLD,IAAAA,IAAI,GAAG5C,QAAQ,CAAC,EAAD,EAAKuC,MAAL,EAAa,EAAb,EAAiBS,SAAjB,EAA4B;AACzCG,MAAAA,KAAK,EAAEnD,QAAQ,CAAC,EAAD,EAAK6C,SAAL,EAAgB;AAC7BO,QAAAA,KAAK,EAAEb,MAAM,CAACc;AADe,OAAhB,CAD0B;AAIzCC,MAAAA,UAAU,EAAE;AACVR,QAAAA,GAAG,EAAE7B,cADK;AAEVmC,QAAAA,KAAK,EAAEb,MAAM,CAACgB;AAFJ;AAJ6B,KAA5B,CAAf;AASD;;AAED9C,EAAAA,YAAY,CAAC0B,WAAD,EAAcN,WAAd,EAA2B;AACrC2B,IAAAA,YAAY,EAAEnC,cADuB;AAErCoC,IAAAA,QAAQ,EAAE,EAAEb,IAAI,IAAIlB,IAAV;AAF2B,GAA3B,CAAZ;AAIA,SAAOkB,IAAP;AACD;AACD,IAAIc,SAAS,GAAG;AACd;;;;;;;;;;;;;;;;;;;;;;AAsBAC,EAAAA,QAAQ,EAAE1D,SAAS,CAAC2D,IAAV,CAAeC,UAvBX;;AAyBd;;;;;AAKAnC,EAAAA,IAAI,EAAEzB,SAAS,CAAC6D,IA9BF;;AAgCd;;;;;AAKAnC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC6D,IArCN;;AAuCd;;;;;AAKA1C,EAAAA,IAAI,EAAEnB,SAAS,CAAC6D,IA5CF;AA6CdvD,EAAAA,SAAS,EAAEN,SAAS,CAAC8D,KAAV,CAAgB,CAAC,IAAD,EAAO,KAAP,CAAhB,CA7CG;;AA+Cd;;;AAGAxC,EAAAA,YAAY,EAAEtB,SAAS,CAAC+D,MAlDV;;AAoDd;;;AAGA3C,EAAAA,cAAc,EAAEpB,SAAS,CAACgE;AAvDZ,CAAhB;AAyDA,IAAIC,YAAY,GAAG;AACjB3D,EAAAA,SAAS,EAAE;AADM,CAAnB;AAIA;;;;;;;AAMA,SAAS4D,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIT,QAAQ,GAAGS,KAAK,CAACT,QAArB;AAAA,MACI/C,OAAO,GAAGb,6BAA6B,CAACqE,KAAD,EAAQ,CAAC,UAAD,CAAR,CAD3C;;AAGA,MAAIC,IAAI,GAAG1D,eAAe,CAACC,OAAD,CAA1B;AACA,SAAO,aAAaV,KAAK,CAACoE,aAAN,CAAoBpE,KAAK,CAACqE,QAA1B,EAAoC,IAApC,EAA0CF,IAAI,CAACpB,QAAL,GAAgBU,QAAQ,CAACU,IAAD,CAAxB,GAAiC,IAA3E,CAApB;AACD;;AAEDF,YAAY,CAACK,WAAb,GAA2B,2BAA3B;AACAL,YAAY,CAACT,SAAb,GAAyBA,SAAzB;AACAS,YAAY,CAACD,YAAb,GAA4BA,YAA5B;AACA;;AAEA,eAAeC,YAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useRef } from 'react';\r\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\r\nimport DropdownContext from './DropdownContext';\r\nimport usePopper, { toModifierMap } from './usePopper';\r\nimport useRootClose from './useRootClose';\r\n\r\nvar noop = function noop() {};\r\n/**\r\n * @memberOf Dropdown\r\n * @param {object}  options\r\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\r\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\r\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\r\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\r\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\r\n */\r\n\r\n\r\nexport function useDropdownMenu(options) {\r\n  var _modifiers$arrow;\r\n\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var context = useContext(DropdownContext);\r\n\r\n  var _useCallbackRef = useCallbackRef(),\r\n      arrowElement = _useCallbackRef[0],\r\n      attachArrowRef = _useCallbackRef[1];\r\n\r\n  var hasShownRef = useRef(false);\r\n  var _options = options,\r\n      flip = _options.flip,\r\n      rootCloseEvent = _options.rootCloseEvent,\r\n      _options$popperConfig = _options.popperConfig,\r\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\r\n      _options$usePopper = _options.usePopper,\r\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\r\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\r\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\r\n\r\n  if (show && !hasShownRef.current) {\r\n    hasShownRef.current = true;\r\n  }\r\n\r\n  var handleClose = function handleClose(e) {\r\n    context == null ? void 0 : context.toggle(false, e);\r\n  };\r\n\r\n  var _ref = context || {},\r\n      drop = _ref.drop,\r\n      setMenu = _ref.setMenu,\r\n      menuElement = _ref.menuElement,\r\n      toggleElement = _ref.toggleElement;\r\n\r\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\r\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\r\n  var modifiers = toModifierMap(popperConfig.modifiers);\r\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\r\n    placement: placement,\r\n    enabled: !!(shouldUsePopper && show),\r\n    modifiers: _extends({}, modifiers, {\r\n      eventListeners: {\r\n        enabled: !!show\r\n      },\r\n      arrow: _extends({}, modifiers.arrow, {\r\n        enabled: !!arrowElement,\r\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\r\n          element: arrowElement\r\n        })\r\n      }),\r\n      flip: _extends({\r\n        enabled: !!flip\r\n      }, modifiers.flip)\r\n    })\r\n  }));\r\n  var menu;\r\n  var menuProps = {\r\n    ref: setMenu || noop,\r\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\r\n  };\r\n  var childArgs = {\r\n    show: show,\r\n    alignEnd: alignEnd,\r\n    hasShown: hasShownRef.current,\r\n    close: handleClose\r\n  };\r\n\r\n  if (!shouldUsePopper) {\r\n    menu = _extends({}, childArgs, {\r\n      props: menuProps\r\n    });\r\n  } else {\r\n    menu = _extends({}, popper, {}, childArgs, {\r\n      props: _extends({}, menuProps, {\r\n        style: popper.styles\r\n      }),\r\n      arrowProps: {\r\n        ref: attachArrowRef,\r\n        style: popper.arrowStyles\r\n      }\r\n    });\r\n  }\r\n\r\n  useRootClose(menuElement, handleClose, {\r\n    clickTrigger: rootCloseEvent,\r\n    disabled: !(menu && show)\r\n  });\r\n  return menu;\r\n}\r\nvar propTypes = {\r\n  /**\r\n   * A render prop that returns a Menu element. The `props`\r\n   * argument should spread through to **a component that can accept a ref**.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   alignEnd: boolean,\r\n   *   close: (?SyntheticEvent) => void,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\r\n  children: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Controls the visible state of the menu, generally this is\r\n   * provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\r\n  show: PropTypes.bool,\r\n\r\n  /**\r\n   * Aligns the dropdown menu to the 'end' of it's placement position.\r\n   * Generally this is provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\r\n  alignEnd: PropTypes.bool,\r\n\r\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\r\n  flip: PropTypes.bool,\r\n  usePopper: PropTypes.oneOf([true, false]),\r\n\r\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\r\n  popperConfig: PropTypes.object,\r\n\r\n  /**\r\n   * Override the default event used by RootCloseWrapper.\r\n   */\r\n  rootCloseEvent: PropTypes.string\r\n};\r\nvar defaultProps = {\r\n  usePopper: true\r\n};\r\n\r\n/**\r\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\r\n *\r\n * @displayName DropdownMenu\r\n * @memberOf Dropdown\r\n */\r\nfunction DropdownMenu(_ref2) {\r\n  var children = _ref2.children,\r\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\r\n\r\n  var args = useDropdownMenu(options);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\r\n}\r\n\r\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\r\nDropdownMenu.propTypes = propTypes;\r\nDropdownMenu.defaultProps = defaultProps;\r\n/** @component */\r\n\r\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}