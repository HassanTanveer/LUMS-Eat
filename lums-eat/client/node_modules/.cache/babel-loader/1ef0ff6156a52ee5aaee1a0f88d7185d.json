{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{createStructuredSelector}from'reselect';import{withRouter}from'react-router-dom';import CustomButton from'../custom-button/custom-button.component';import CartItem from'../cart-item/cart-item.component';import{selectCartItems}from'../../redux/cart/cart.selectors';import{toggleCartHidden}from'../../redux/cart/cart.actions.js';import'./cart-dropdown.styles.scss';var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-items\"},cartItems.length?cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CartItem,{key:cartItem.id,item:cartItem});}):/*#__PURE__*/React.createElement(\"span\",{className:\"empty-message\"},\"Your cart is empty\")),localStorage.email?/*#__PURE__*/React.createElement(CustomButton,{onClick:function onClick(){history.push('/checkout');dispatch(toggleCartHidden());}},\"GO TO CHECKOUT\"):/*#__PURE__*/React.createElement(CustomButton,{onClick:function onClick(){history.push('/login');dispatch(toggleCartHidden());}},\"GO TO CHECKOUT\"));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems});export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","localStorage","email","push","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,gBAAT,KAAiC,kCAAjC,CAEA,MAAO,6BAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,oBACnB,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,YAAf,EACGF,SAAS,CAACG,MAAV,CACCH,SAAS,CAACI,GAAV,CAAc,SAAAC,QAAQ,qBACpB,oBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACC,EAAxB,CAA4B,IAAI,CAAED,QAAlC,EADoB,EAAtB,CADD,cAKC,4BAAM,SAAS,CAAC,eAAhB,uBANJ,CADF,CAUGE,YAAY,CAACC,KAAb,cACD,oBAAC,YAAD,EACE,OAAO,CAAE,kBAAM,CACbP,OAAO,CAACQ,IAAR,CAAa,WAAb,EACAP,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CACD,CAJH,mBADC,cAUA,oBAAC,YAAD,EACC,OAAO,CAAE,kBAAM,CACbG,OAAO,CAACQ,IAAR,CAAa,QAAb,EACAP,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CACD,CAJF,mBApBH,CADmB,EAArB,CAgCA,GAAMY,CAAAA,eAAe,CAAGjB,wBAAwB,CAAC,CAC/CO,SAAS,CAAEH,eADoC,CAAD,CAAhD,CAIA,cAAeH,CAAAA,UAAU,CAACF,OAAO,CAACkB,eAAD,CAAP,CAAyBX,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <span className='empty-message'>Your cart is empty</span>\n      )}\n    </div>\n    {localStorage.email ?(\n    <CustomButton\n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>): \n    \n    (<CustomButton\n      onClick={() => {\n        history.push('/login');\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>)}\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}