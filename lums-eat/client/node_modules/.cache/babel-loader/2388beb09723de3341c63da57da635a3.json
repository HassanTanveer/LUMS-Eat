{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/yearanalyticsview/yearanalyticsview.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport './yearanalyticsview.styles.scss';\n\nclass AnalyticsView extends React.Component {\n  constructor() {\n    super();\n\n    this.totalPrice = () => {\n      let total = 0;\n\n      for (let i = 0; i < this.state.sections.length; i++) {\n        var order = this.state.sections[i];\n        total = total + order.totalPrice;\n      }\n\n      return total;\n    };\n\n    this.findHighest = () => {\n      var most = []; // create an empty array\n\n      for (let i = 0; i < this.state.sections.length; i++) {\n        var check = this.state.sections[i];\n\n        if (check) {\n          var check2 = check.items;\n        }\n\n        for (let j = 0; j < check2.length; j++) {\n          var found = 0;\n          var check3 = check2[j];\n\n          for (let c = 0; c < most.length; c++) {\n            if (most[c].key == check3[0]) {\n              most[c].value = most[c].value + parseInt(check3[1]);\n              found = 1;\n            }\n          }\n\n          if (found == 0) {\n            most.push({\n              key: check3[0],\n              value: parseInt(check3[1])\n            });\n          }\n        }\n      }\n\n      var highindex = 0;\n      var highest = 0;\n\n      for (let i = 0; i < most.length; i++) {\n        if (most[i].value > highest) {\n          highest = most[i].value;\n          highindex = i;\n        }\n      }\n\n      var final = most[highindex];\n\n      if (final) {\n        var mostordered = final.key;\n      }\n\n      return mostordered;\n    };\n\n    this.state = {\n      sections: [] // newsections: []\n\n    };\n  }\n\n  componentDidMount() {\n    // const date = this.getCurrentDate();\n    fetch(`/orders/complete/${this.getCurrentDate()}/${localStorage.RestaurantID}`).then(res => res.json()).then(sections => this.setState({\n      sections\n    }));\n  } // countTotal = () => {\n  //   let total = 0\n  //   for (let i = 0; i < this.state.sections.length; i++) {\n  //     total = total + 1;\n  //   }\n  //   return total\n  // }\n\n\n  getCurrentDate(separator = '-') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${year}`;\n  }\n\n  render() {\n    // const total = this.countTotal();\n    const revenue = this.totalPrice();\n    const most = this.findHighest();\n    const date = this.getCurrentDate();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"restaurant-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"TODAY\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"MONTH\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"YEAR\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"TOTAL\")), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Number of orders\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Most ordered item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Revenue\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Month\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, this.state.sections.length), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, most), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, revenue, \" PKR\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, date)))));\n  }\n\n}\n\nexport default AnalyticsView;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/yearanalyticsview/yearanalyticsview.component.jsx"],"names":["React","Link","Table","AnalyticsView","Component","constructor","totalPrice","total","i","state","sections","length","order","findHighest","most","check","check2","items","j","found","check3","c","key","value","parseInt","push","highindex","highest","final","mostordered","componentDidMount","fetch","getCurrentDate","localStorage","RestaurantID","then","res","json","setState","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","render","revenue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Table from 'react-bootstrap/Table';\n\nimport './yearanalyticsview.styles.scss';\n\nclass AnalyticsView extends React.Component {\n  constructor() {\n    super();\n\n      this.state={\n      sections: [],\n      // newsections: []\n      }\n    \n  }\n\n  componentDidMount(){\n    // const date = this.getCurrentDate();\n    fetch(`/orders/complete/${this.getCurrentDate()}/${localStorage.RestaurantID}`)\n    .then(res=> res.json())\n    .then(sections => this.setState({sections}))\n  }\n\n  // countTotal = () => {\n  //   let total = 0\n\n  //   for (let i = 0; i < this.state.sections.length; i++) {\n  //     total = total + 1;\n  //   }\n\n  //   return total\n  // }\n\n  totalPrice = () => {\n    let total = 0\n    for (let i = 0; i < this.state.sections.length; i++) {\n      var order = this.state.sections[i];\n      total = total + order.totalPrice;\n    }\n    return total\n  }\n\n  findHighest = () => {\n    var most = []; // create an empty array\n\n    for (let i = 0; i < this.state.sections.length; i++)\n    {\n      var check = this.state.sections[i];\n\n      if(check)\n      {\n        var check2 = check.items;\n      }\n\n      for (let j = 0; j < check2.length; j++)\n      {\n        var found = 0;\n        var check3 = check2[j];\n\n        for (let c = 0; c < most.length; c++)\n        {\n          if(most[c].key == check3[0])\n          {\n            most[c].value = most[c].value + parseInt(check3[1]);\n            found = 1;\n          }\n        }\n\n        if(found == 0)\n        {\n          most.push({\n            key:   check3[0],\n            value: parseInt(check3[1])\n          });\n        }\n      }\n    }\n\n    var highindex = 0;\n    var highest = 0;\n    for (let i = 0; i < most.length; i++) {\n      if (most[i].value > highest){\n        highest = most[i].value;\n        highindex = i;\n      }\n    }\n    var final = most[highindex];\n\n    if(final)\n    {\n      var mostordered = final.key;\n    }\n\n    return mostordered\n  }\n\n  getCurrentDate(separator='-'){\n\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    \n    return `${year}`\n  }\n\n  render() {\n\n    // const total = this.countTotal();\n    const revenue = this.totalPrice();\n    const most = this.findHighest();\n    const date = this.getCurrentDate();\n\n    return (\n      <div>\n        <div className='restaurant-menu'>\n          <div className=\"top\">\n            <Link className='top' to='/analytics'>\n              TODAY\n            </Link>\n            <Link className='top' to='/analytics/month'>\n              MONTH\n            </Link>\n            <Link className='top' to='/analytics/year'>\n              YEAR\n            </Link>\n            <Link className='top' to='/analytics/total'>\n              TOTAL\n            </Link>\n          </div>\n          <Table responsive>\n            <thead>\n              <tr className = 'font'>\n                <th>Number of orders</th>\n                <th>Most ordered item</th>\n                <th>Revenue</th>\n                <th>Month</th>\n              </tr>\n            </thead>\n            <tbody>\n              <td className = 'font'>{this.state.sections.length}</td>\n              <td className = 'font'>{most}</td>\n              <td className = 'font'>{revenue} PKR</td>\n              <td className = 'font'>{date}</td>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnalyticsView;\n"]},"metadata":{},"sourceType":"module"}