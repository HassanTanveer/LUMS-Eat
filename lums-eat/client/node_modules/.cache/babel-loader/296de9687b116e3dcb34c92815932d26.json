{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/userfeedbackpage/userfeedbackpage.component.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './userfeedbackpage.styles.scss';\nimport PropTypes from \"prop-types\"; // import { Link } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { Route } from 'react-router-dom';\n\n/*#__PURE__*/\nReact.createElement(Route, {\n  path: \"/:handle\",\n  component: UserFeedbackPage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 1\n  }\n});\n\nconst axios = require('axios');\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = text => event => {\n      event.preventDefault();\n      let details = {\n        \"UserID\": text,\n        \"ItemID\": this.state.ItemID,\n        \"OrderID\": this.state.OrderID,\n        \"RestaurantID\": this.state.RestaurantID,\n        \"Feedback\": this.state.Feedback\n      };\n      axios.post('/feedback/add', details).then(res => this.setState({\n        text2: 'Feedback has been sent to restaurant!'\n      }), this.setState({\n        popupshow: true\n      })).catch(err => this.setState({\n        text: 'Error'\n      }), this.setState({\n        text2: 'Could not send feedback!'\n      }), this.setState({\n        popupshow: true\n      }));\n    };\n\n    this.refresh = event => {\n      window.location.reload();\n    };\n\n    this.state = {\n      UserID: '',\n      ItemID: '',\n      OrderID: '',\n      RestaurantID: '',\n      Feedback: '',\n      popupshow: false,\n      text: 'Feedback Sent!',\n      text2: 'Feedback has been sent to restaurant!' // collection: []\n\n    };\n  }\n\n  updateUserID(event) {\n    this.setState({\n      UserID: event.target.value\n    });\n  }\n\n  updateItemID(event) {\n    this.setState({\n      ItemID: event.target.value\n    });\n  }\n\n  updateOrderID(event) {\n    this.setState({\n      OrderID: event.target.value\n    });\n  }\n\n  updateRestaurantID(event) {\n    this.setState({\n      RestaurantID: event.target.value\n    });\n  }\n\n  updateFeedback(event) {\n    this.setState({\n      Feedback: event.target.value\n    });\n  }\n\n  // componentDidMount( )\n  //   {\n  //    //console.log(`This is match ${this.props.match.params.id}`)\n  //     fetch(`/menu/find/${this.props.match.params.id}`)\n  //       .then(res=> res.json())\n  //       .then(collection => this.setState({collection}))\n  //   }\n  // componentDidMount( ){\n  //   const {handle} = this.props.match.params\n  // }\n  renderIcon() {\n    this.setState({\n      UserID: 'CHECK'\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, \"Function called\");\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      handle\n    } = this.props.match.params;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Submit Feedback\"), \"CHECK\", user.name ? /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Hey there, \", user.name, \", \", user.id, \", \", handle) : /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Hey there!\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Provide Feedback\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit(user.name.toString()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"ItemID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Item ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      className: \"itemid\",\n      placeholder: \"Enter item ID\",\n      required: true,\n      value: this.state.ItemID,\n      onChange: this.updateItemID.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"OrderID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Order ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      className: \"orderid\",\n      placeholder: \"Enter order ID\",\n      required: true,\n      value: this.state.OrderID,\n      onChange: this.updateOrderID.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"RestaurantID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"RestaurantID\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter Restaurant ID\",\n      required: true,\n      value: this.state.RestaurantID,\n      onChange: this.updateRestaurantID.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter Feedback\",\n      required: true,\n      value: this.state.Feedback,\n      onChange: this.updateFeedback.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.popupshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: () => this.setState({\n        popupshow: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \" \", this.state.text, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \" \", this.state.text2, \" \"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"Ok\")))));\n  }\n\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(UserFeedbackPage); // export default UserFeedbackPage;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/userfeedbackpage/userfeedbackpage.component.jsx"],"names":["React","Form","Button","Modal","PropTypes","connect","logoutUser","Route","UserFeedbackPage","axios","require","Component","constructor","handleSubmit","text","event","preventDefault","details","state","ItemID","OrderID","RestaurantID","Feedback","post","then","res","setState","text2","popupshow","catch","err","refresh","window","location","reload","UserID","updateUserID","target","value","updateItemID","updateOrderID","updateRestaurantID","updateFeedback","renderIcon","render","user","props","auth","handle","match","params","name","id","toString","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport './userfeedbackpage.styles.scss';\n\nimport PropTypes from \"prop-types\";\n// import { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { Route } from 'react-router-dom';\n\n<Route path='/:handle' component = {UserFeedbackPage} />\n\nconst axios = require('axios')\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n    \n      this.state={\n        UserID: '',\n        ItemID: '',\n        OrderID: '',\n        RestaurantID: '',\n        Feedback: '',\n\n        popupshow: false,\n        text: 'Feedback Sent!',\n        text2: 'Feedback has been sent to restaurant!'\n\n        // collection: []\n      }  \n  }\n\n  updateUserID(event) {\n    this.setState({UserID: event.target.value})\n  }\n\n  updateItemID(event) {\n    this.setState({ItemID: event.target.value})\n  }\n\n  updateOrderID(event) {\n    this.setState({OrderID: event.target.value})\n  }\n\n  updateRestaurantID(event) {\n    this.setState({RestaurantID: event.target.value})\n  }\n\n  updateFeedback(event) {\n    this.setState({Feedback: event.target.value})\n  }\n\n  handleSubmit = (text) => (event) => {\n    event.preventDefault();\n    let details = {\n      \"UserID\": text,\n      \"ItemID\": this.state.ItemID,\n\t    \"OrderID\": this.state.OrderID,\n\t    \"RestaurantID\": this.state.RestaurantID,\n\t    \"Feedback\": this.state.Feedback\n      }\n    axios.post('/feedback/add', details)\n      .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({popupshow: true}))\n      .catch(err => this.setState({text: 'Error'}), this.setState({text2: 'Could not send feedback!'}), this.setState({popupshow: true}))\n  }\n\n  refresh = (event) => {\n    window.location.reload();\n  }\n\n  // componentDidMount( )\n  //   {\n  //    //console.log(`This is match ${this.props.match.params.id}`)\n  //     fetch(`/menu/find/${this.props.match.params.id}`)\n  //       .then(res=> res.json())\n  //       .then(collection => this.setState({collection}))\n  //   }\n\n  // componentDidMount( ){\n  //   const {handle} = this.props.match.params\n  // }\n  \n  renderIcon(){\n    this.setState({UserID: 'CHECK'})\n    return(\n      <div>Function called</div>\n    )\n  }\n\n  render() {\n    const { user } = this.props.auth;\n    const {handle} = this.props.match.params\n    return (\n      <div className = 'check'>\n        <h1>Submit Feedback</h1>\n        CHECK\n        {/* {handle} */}\n        {user.name ? (\n          <b>Hey there, {user.name}, {user.id}, {handle}</b>\n        ) : (\n          <b>Hey there!</b>\n        )}\n        <h1>Provide Feedback</h1>\n        \n        <Form onSubmit = {this.handleSubmit(user.name.toString())}>\n          {/* <Form.Group controlId=\"UserID\">\n                <Form.Label>User ID</Form.Label>\n                <Form.Control type=\"name\"\n                              className = 'userid'\n                              placeholder=\"Enter user ID\"\n                              required\n                              // value = {this.state.UserID}\n                              value = {user.name}\n                              onChange = {this.updateUserID.bind(this)} \n                              />\n            </Form.Group> */}\n\n            <Form.Group controlId=\"ItemID\">\n                <Form.Label>Item ID</Form.Label>\n                <Form.Control type=\"name\"\n                              className = 'itemid'\n                              placeholder=\"Enter item ID\"\n                              required\n                              value = {this.state.ItemID}\n                              onChange = {this.updateItemID.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"OrderID\">\n                <Form.Label>Order ID</Form.Label>\n                <Form.Control type=\"name\"\n                              className = 'orderid'\n                              placeholder=\"Enter order ID\"\n                              required\n                              value = {this.state.OrderID}\n                              onChange = {this.updateOrderID.bind(this)} />\n            </Form.Group>\n\n            {/* <Form.Group controlId=\"Price\">\n                <Form.Label>Price</Form.Label>\n                <Form.Control type=\"number\"\n                              placeholder=\"Enter price in pkr\"\n                              required\n                              value ={this.state.price}\n                              onChange = {this.updatePrice.bind(this)} />\n            </Form.Group> */}\n\n            <Form.Group controlId=\"RestaurantID\">\n                <Form.Label>RestaurantID</Form.Label>\n                <Form.Control type=\"name\"\n                              placeholder=\"Enter Restaurant ID\"\n                              required\n                              value ={this.state.RestaurantID}\n                              onChange = {this.updateRestaurantID.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Feedback\">\n                <Form.Label>Feedback</Form.Label>\n                <Form.Control type=\"name\"\n                              placeholder=\"Enter Feedback\"\n                              required\n                              value ={this.state.Feedback}\n                              onChange = {this.updateFeedback.bind(this)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" block>\n                Submit\n            </Button>\n\n            <Modal show={this.state.popupshow}>\n              <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n                <Modal.Title> {this.state.text} </Modal.Title>\n              </Modal.Header>\n              <Modal.Body> {this.state.text2} </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"primary\" onClick={this.refresh}>\n                  Ok\n                </Button>\n              </Modal.Footer>\n            </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(UserFeedbackPage);\n\n// export default UserFeedbackPage;"]},"metadata":{},"sourceType":"module"}