{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/logout/logout.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { Link } from 'react-router-dom';\nimport './logout.styles.scss';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\n\nclass Logout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n      this.props.cartItems.map(item => this.props.clearItem(item)); //console.log(`{this.props.location.pathname}`)\n      //this.props.history.push(`{this.props.location.pathname}`);\n\n      this.props.history.push('/');\n    };\n  }\n\n  updateSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Link, {\n      className: \"option\",\n      onClick: this.onLogoutClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, \"LOGOUT\");\n  }\n\n}\n\nLogout.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logoutUser: () => dispatch(logoutUser()),\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Logout));","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/logout/logout.jsx"],"names":["React","Component","PropTypes","connect","logoutUser","Link","withRouter","createStructuredSelector","selectCartItems","clearItemFromCart","Logout","onLogoutClick","e","preventDefault","props","cartItems","map","item","clearItem","history","push","updateSearch","event","setState","search","target","value","render","propTypes","func","isRequired","auth","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SACEC,eADF,QAGO,iCAHP;AAKA,SACEC,iBADF,QAGO,+BAHP;;AAOA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAa7BU,aAb6B,GAabC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWV,UAAX;AACA,WAAKU,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,IAAI,IAC3B,KAAKH,KAAL,CAAWI,SAAX,CAAqBD,IAArB,CADF,EAHmB,CAQnB;AACA;;AACA,WAAKH,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAED,KAzB4B;AAAA;;AAO7BC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAtB,KAAd;AACD;;AAoBDC,EAAAA,MAAM,GAAG;AAIP,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAA2B,MAAA,OAAO,EAAI,KAAKhB,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;;AAvC4B;;AA0C/BD,MAAM,CAACkB,SAAP,GAAmB;AACjBxB,EAAAA,UAAU,EAAEF,SAAS,CAAC2B,IAAV,CAAeC,UADV;AAEjBC,EAAAA,IAAI,EAAE7B,SAAS,CAAC8B,MAAV,CAAiBF;AAFN,CAAnB;AAOA,MAAMG,eAAe,GAAG1B,wBAAwB,CAAC;AAC/CQ,EAAAA,SAAS,EAAEP;AADoC,CAAD,CAAhD;;AAMA,MAAM0B,kBAAkB,GAAGC,QAAQ,KAAK;AACtC/B,EAAAA,UAAU,EAAE,MAAM+B,QAAQ,CAAC/B,UAAU,EAAX,CADY;AAEtCc,EAAAA,SAAS,EAAGD,IAAI,IAAIkB,QAAQ,CAAC1B,iBAAiB,CAACQ,IAAD,CAAlB;AAFU,CAAL,CAAnC;;AAOA,eAAeX,UAAU,CAACH,OAAO,CAC/B8B,eAD+B,EACdC,kBADc,CAAP,CAIxBxB,MAJwB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { Link } from 'react-router-dom';\nimport './logout.styles.scss';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectCartItems\n\n} from '../../redux/cart/cart.selectors';\n\nimport {\n  clearItemFromCart\n  \n} from '../../redux/cart/cart.actions';\n\n\n\nclass Logout extends Component {  \n\n\n  \n\n  \n\n  updateSearch(event) {\n    this.setState({search: event.target.value})\n  }\n\n \n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    this.props.cartItems.map(item => (\n      this.props.clearItem(item)\n      ))\n\n  \n    //console.log(`{this.props.location.pathname}`)\n    //this.props.history.push(`{this.props.location.pathname}`);\n    this.props.history.push('/');\n \n  };\n\n\n\n  render() {\n\n    \n   \n    return (\n      <Link className='option'   onClick = {this.onLogoutClick } >\n      LOGOUT\n    </Link>\n    )\n      \n  }\n}\n\nLogout.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n  \n  \n});\n\nconst mapDispatchToProps = dispatch => ({\n  logoutUser: () => dispatch(logoutUser()),\n  clearItem : item => dispatch(clearItemFromCart(item))\n});\n\n\n\nexport default withRouter(connect(\n  mapStateToProps, mapDispatchToProps\n  \n  \n)(Logout));\n\n"]},"metadata":{},"sourceType":"module"}