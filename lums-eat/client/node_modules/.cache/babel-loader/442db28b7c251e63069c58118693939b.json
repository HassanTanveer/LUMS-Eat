{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './userfeedback.styles.scss';\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\nconst axios = require('axios');\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let details = {\n        \"UserID\": localStorage.name,\n        // \"ItemID\": this.state.ItemID,\n        \"OrderID\": this.state.OrderID,\n        \"RestaurantID\": this.state.RestaurantID,\n        \"Rating\": this.state.Rating,\n        \"Feedback\": this.state.Feedback\n      };\n      axios.post('/feedback/add', details).then(res => this.setState({\n        text2: 'Feedback has been sent to restaurant!'\n      }), this.setState({\n        text: 'Feedback'\n      }), this.setState({\n        popupshow: true\n      })).catch(err => this.setState({\n        text2: 'Error: Feedback for this order has already been sent to restaurant!'\n      }), this.setState({\n        popupshow: true\n      }));\n    };\n\n    this.refresh = event => {\n      window.location.reload();\n    };\n\n    this.state = {\n      UserID: '',\n      // ItemID: '',\n      OrderID: '',\n      RestaurantID: '',\n      Rating: Number,\n      Feedback: '',\n      popupshow: false,\n      text: 'Feedback!',\n      text2: 'Feedback has been sent to restaurant!'\n    };\n  }\n\n  updateFeedback(event) {\n    this.setState({\n      Feedback: event.target.value\n    });\n  }\n\n  updateRating(event) {\n    this.setState({\n      Rating: event.target.value\n    }); // console.log(event.target.value);\n  }\n\n  componentDidMount() {\n    const {\n      order\n    } = this.props.location.state;\n    const {\n      restaurant\n    } = this.props.location.state; // const { item } = this.props.location.state\n\n    this.setState({\n      RestaurantID: restaurant\n    });\n    this.setState({\n      OrderID: order\n    });\n  }\n\n  renderIcon() {\n    this.setState({\n      UserID: 'CHECK'\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"Function called\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"keyboard_backspace\"), \" Back to home\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Login\"), \" below\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n      class: \"colorc\",\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 40\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, errors.email, errors.emailnotfound)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, errors.password, errors.passwordincorrect)), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"filled-in checkbox-blue-grey\",\n      type: \"checkbox\",\n      onChange: this.handleChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Login as Restuarant?\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      class: \"colorc\",\n      to: \"/reset-pass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Forgot your password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Login\"))))))) // <dic className = 'restaurantpage'>\n    //   <div className = 'check'>\n    //       <Link to=\"/orders\" class = \"a\"> <i className=\"material-icons\">close</i> </Link>\n    //     <div>\n    //       <h4>\n    //         <b>Submit</b> feedback\n    //       </h4>\n    //       <p >\n    //         <b>Restaurant:</b> {this.state.RestaurantID.toUpperCase()}, <b>Order ID:</b> {this.state.OrderID}\n    //       </p>\n    //     </div>\n    //     <Form onSubmit = {this.onSubmit}>\n    //       <Form.Label>Rating</Form.Label>\n    //       <div class=\"demo\" onChange={this.updateRating.bind(this)} >\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"1\" type=\"radio\" />\n    //             <span>1</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"2\" type=\"radio\" />\n    //             <span>2</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"3\" type=\"radio\" required />\n    //             <span>3</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"4\" type=\"radio\" />\n    //             <span>4</span>\n    //           </label>\n    //         </span>\n    //         <span>\n    //           <label>\n    //             <input name=\"group1\" value=\"5\" type=\"radio\" />\n    //             <span>5</span>\n    //           </label>\n    //         </span>\n    //       </div>\n    //       <Form.Group controlId=\"Feedback\">\n    //           <Form.Label>Feedback</Form.Label>\n    //           <Form.Control type=\"name\"\n    //                         placeholder=\"Enter Feedback\"\n    //                         required\n    //                         value ={this.state.Feedback}\n    //                         onChange = {this.updateFeedback.bind(this)} />\n    //       </Form.Group>\n    //       <Button variant=\"primary\" type=\"submit\" block>\n    //           Submit\n    //       </Button>\n    //     </Form>\n    //     <Modal show={this.state.popupshow}>\n    //       <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n    //         <Modal.Title> {this.state.text} </Modal.Title>\n    //       </Modal.Header>\n    //       <Modal.Body> {this.state.text2} </Modal.Body>\n    //       <Modal.Footer>\n    //         <Button variant=\"primary\" onClick={this.refresh}>\n    //           Ok\n    //         </Button>\n    //       </Modal.Footer>\n    //     </Modal>\n    //   </div>\n    // </dic>\n    ;\n  }\n\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(UserFeedbackPage); // export default UserFeedbackPage;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx"],"names":["React","Form","Button","Modal","PropTypes","Link","connect","logoutUser","axios","require","UserFeedbackPage","Component","constructor","onSubmit","e","preventDefault","details","localStorage","name","state","OrderID","RestaurantID","Rating","Feedback","post","then","res","setState","text2","text","popupshow","catch","err","refresh","event","window","location","reload","UserID","Number","updateFeedback","target","value","updateRating","componentDidMount","order","props","restaurant","renderIcon","render","onChange","email","errors","classnames","invalid","emailnotfound","password","passwordincorrect","paddingLeft","handleChecked","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport './userfeedback.styles.scss';\n\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\n\nconst axios = require('axios')\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n    \n      this.state={\n        UserID: '',\n        // ItemID: '',\n        OrderID: '',\n        RestaurantID: '',\n        Rating: Number,\n        Feedback: '',\n\n        popupshow: false,\n        text: 'Feedback!',\n        text2: 'Feedback has been sent to restaurant!'\n      }  \n  }\n\n  updateFeedback(event) {\n    this.setState({Feedback: event.target.value})\n  }\n\n  updateRating(event) {\n    this.setState({Rating: event.target.value})\n    // console.log(event.target.value);\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    let details = {\n      \"UserID\": localStorage.name,\n      // \"ItemID\": this.state.ItemID,\n\t    \"OrderID\": this.state.OrderID,\n      \"RestaurantID\": this.state.RestaurantID,\n      \"Rating\": this.state.Rating,\n\t    \"Feedback\": this.state.Feedback\n      }\n    axios.post('/feedback/add', details)\n      .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({text: 'Feedback'}), this.setState({popupshow: true}))\n      .catch(err => this.setState({text2: 'Error: Feedback for this order has already been sent to restaurant!'}), this.setState({popupshow: true}))\n  };\n\n  refresh = (event) => {\n    window.location.reload();\n  }\n\n  componentDidMount( )\n    {\n      const { order } = this.props.location.state\n      const { restaurant } = this.props.location.state\n      // const { item } = this.props.location.state\n      \n      this.setState({RestaurantID: restaurant})\n      this.setState({OrderID: order})\n    }\n\n  renderIcon(){\n    this.setState({UserID: 'CHECK'})\n    return(\n      <div>Function called</div>\n    )\n  }\n\n  render() {\n    return (\n      <div className = 'check'>\n\n      <div className=\"container\">\n        {/* <div style={{ marginTop: \"4rem\" }} className=\"row\"> */}\n        <div className=\"row\">\n          <div className=\"col s8\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\">\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link class = \"colorc\" to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}    \n                </span>\n              </div>\n              <p style ={{ paddingLeft: \"11.250px\" }}>\n              <label>\n                <input class=\"filled-in checkbox-blue-grey\" type=\"checkbox\" onChange={ this.handleChecked }/>\n                <span>Login as Restuarant?</span>\n              </label>\n              <p className=\"grey-text text-darken-1\">\n                  <Link class = \"colorc\" to=\"/reset-pass\">Forgot your password?</Link>\n              </p>\n              </p>\n              \n              \n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <Button variant=\"primary\" type=\"submit\" block>\n                  Login\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      </div>\n\n      // <dic className = 'restaurantpage'>\n      //   <div className = 'check'>\n      //       <Link to=\"/orders\" class = \"a\"> <i className=\"material-icons\">close</i> </Link>\n      //     <div>\n      //       <h4>\n      //         <b>Submit</b> feedback\n      //       </h4>\n      //       <p >\n      //         <b>Restaurant:</b> {this.state.RestaurantID.toUpperCase()}, <b>Order ID:</b> {this.state.OrderID}\n      //       </p>\n      //     </div>\n\n      //     <Form onSubmit = {this.onSubmit}>\n\n      //       <Form.Label>Rating</Form.Label>\n      //       <div class=\"demo\" onChange={this.updateRating.bind(this)} >\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"1\" type=\"radio\" />\n      //             <span>1</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"2\" type=\"radio\" />\n      //             <span>2</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"3\" type=\"radio\" required />\n      //             <span>3</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"4\" type=\"radio\" />\n      //             <span>4</span>\n      //           </label>\n      //         </span>\n      //         <span>\n      //           <label>\n      //             <input name=\"group1\" value=\"5\" type=\"radio\" />\n      //             <span>5</span>\n      //           </label>\n      //         </span>\n      //       </div>\n\n      //       <Form.Group controlId=\"Feedback\">\n      //           <Form.Label>Feedback</Form.Label>\n      //           <Form.Control type=\"name\"\n      //                         placeholder=\"Enter Feedback\"\n      //                         required\n      //                         value ={this.state.Feedback}\n      //                         onChange = {this.updateFeedback.bind(this)} />\n      //       </Form.Group>\n\n      //       <Button variant=\"primary\" type=\"submit\" block>\n      //           Submit\n      //       </Button>\n      //     </Form>\n\n      //     <Modal show={this.state.popupshow}>\n      //       <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n      //         <Modal.Title> {this.state.text} </Modal.Title>\n      //       </Modal.Header>\n      //       <Modal.Body> {this.state.text2} </Modal.Body>\n      //       <Modal.Footer>\n      //         <Button variant=\"primary\" onClick={this.refresh}>\n      //           Ok\n      //         </Button>\n      //       </Modal.Footer>\n      //     </Modal>\n\n      //   </div>\n      // </dic>\n    );\n  }\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(UserFeedbackPage);\n\n// export default UserFeedbackPage;"]},"metadata":{},"sourceType":"module"}