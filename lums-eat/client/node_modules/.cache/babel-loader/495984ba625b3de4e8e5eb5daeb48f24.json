{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\pages\\\\userfeedback\\\\userfeedback.component.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './userfeedback.styles.scss';\nimport PropTypes from \"prop-types\"; // import { Link } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\nconst axios = require('axios');\n\nclass UserFeedbackPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = text => event => {\n      event.preventDefault();\n      let details = {\n        \"UserID\": text,\n        \"ItemID\": this.state.ItemID,\n        \"OrderID\": this.state.OrderID,\n        \"RestaurantID\": this.state.RestaurantID,\n        \"Feedback\": this.state.Feedback\n      };\n      axios.post('/feedback/add', details).then(res => this.setState({\n        text2: 'Feedback has been sent to restaurant!'\n      }), this.setState({\n        popupshow: true\n      })).catch(err => this.setState({\n        text: 'Error'\n      }), this.setState({\n        text2: 'Could not send feedback!'\n      }), this.setState({\n        popupshow: true\n      }));\n    };\n\n    this.refresh = event => {\n      window.location.reload();\n    };\n\n    this.state = {\n      UserID: '',\n      ItemID: '',\n      OrderID: '',\n      RestaurantID: '',\n      Feedback: '',\n      popupshow: false,\n      text: 'Feedback Sent!',\n      text2: 'Feedback has been sent to restaurant!' // collection: []\n\n    };\n  }\n\n  updateUserID(event) {\n    this.setState({\n      UserID: event.target.value\n    });\n  }\n\n  updateItemID(event) {\n    this.setState({\n      ItemID: event.target.value\n    });\n  }\n\n  updateOrderID(event) {\n    this.setState({\n      OrderID: event.target.value\n    });\n  }\n\n  updateRestaurantID(event) {\n    this.setState({\n      RestaurantID: event.target.value\n    });\n  }\n\n  updateFeedback(event) {\n    this.setState({\n      Feedback: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    const {\n      order\n    } = this.props.location.state;\n    const {\n      restaurant\n    } = this.props.location.state;\n    const {\n      item\n    } = this.props.location.state;\n    this.setState({\n      RestaurantID: restaurant\n    });\n    this.setState({\n      OrderID: order\n    });\n    this.setState({\n      ItemID: item[0][0]\n    });\n  }\n\n  renderIcon() {\n    this.setState({\n      UserID: 'CHECK'\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"Function called\");\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"dic\", {\n      className: \"restaurantpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Restaurant: \", this.state.RestaurantID.toUpperCase()), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Order ID: \", this.state.OrderID)), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit(user.name.toString()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter Feedback\",\n      required: true,\n      value: this.state.Feedback,\n      onChange: this.updateFeedback.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.popupshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: () => this.setState({\n        popupshow: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \" \", this.state.text, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \" \", this.state.text2, \" \"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, \"Ok\")))));\n  }\n\n}\n\nUserFeedbackPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(UserFeedbackPage); // export default UserFeedbackPage;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/pages/userfeedback/userfeedback.component.jsx"],"names":["React","Form","Button","Modal","PropTypes","connect","logoutUser","axios","require","UserFeedbackPage","Component","constructor","handleSubmit","text","event","preventDefault","details","state","ItemID","OrderID","RestaurantID","Feedback","post","then","res","setState","text2","popupshow","catch","err","refresh","window","location","reload","UserID","updateUserID","target","value","updateItemID","updateOrderID","updateRestaurantID","updateFeedback","componentDidMount","order","props","restaurant","item","renderIcon","render","user","auth","toUpperCase","name","toString","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport './userfeedback.styles.scss';\r\n\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/authActions\";\r\n\r\nconst axios = require('axios')\r\n\r\nclass UserFeedbackPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n      this.state={\r\n        UserID: '',\r\n        ItemID: '',\r\n        OrderID: '',\r\n        RestaurantID: '',\r\n        Feedback: '',\r\n\r\n        popupshow: false,\r\n        text: 'Feedback Sent!',\r\n        text2: 'Feedback has been sent to restaurant!'\r\n\r\n        // collection: []\r\n      }  \r\n  }\r\n\r\n  updateUserID(event) {\r\n    this.setState({UserID: event.target.value})\r\n  }\r\n\r\n  updateItemID(event) {\r\n    this.setState({ItemID: event.target.value})\r\n  }\r\n\r\n  updateOrderID(event) {\r\n    this.setState({OrderID: event.target.value})\r\n  }\r\n\r\n  updateRestaurantID(event) {\r\n    this.setState({RestaurantID: event.target.value})\r\n  }\r\n\r\n  updateFeedback(event) {\r\n    this.setState({Feedback: event.target.value})\r\n  }\r\n\r\n  handleSubmit = (text) => (event) => {\r\n    event.preventDefault();\r\n    let details = {\r\n      \"UserID\": text,\r\n      \"ItemID\": this.state.ItemID,\r\n\t    \"OrderID\": this.state.OrderID,\r\n\t    \"RestaurantID\": this.state.RestaurantID,\r\n\t    \"Feedback\": this.state.Feedback\r\n      }\r\n    axios.post('/feedback/add', details)\r\n      .then((res) => this.setState({text2: 'Feedback has been sent to restaurant!'}), this.setState({popupshow: true}))\r\n      .catch(err => this.setState({text: 'Error'}), this.setState({text2: 'Could not send feedback!'}), this.setState({popupshow: true}))\r\n  }\r\n\r\n  refresh = (event) => {\r\n    window.location.reload();\r\n  }\r\n\r\n  componentDidMount( )\r\n    {\r\n      const { order } = this.props.location.state\r\n      const { restaurant } = this.props.location.state\r\n      const { item } = this.props.location.state\r\n      \r\n      this.setState({RestaurantID: restaurant})\r\n      this.setState({OrderID: order})\r\n      this.setState({ItemID: item[0][0]})\r\n    }\r\n\r\n  renderIcon(){\r\n    this.setState({UserID: 'CHECK'})\r\n    return(\r\n      <div>Function called</div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <dic className = 'restaurantpage'>\r\n        <div className = 'check'>\r\n        {/* {fromNotifications.check} */}\r\n          {/* <h1>Submit Feedback</h1> */}\r\n          {/* {user.name ? (\r\n            <b>Hey there, {user.name}, {user.id}, {fromNotifications.check}</b>\r\n          ) : (\r\n            <b>Hey there!</b>\r\n          )} */}\r\n\r\n          {/* <h1>Provide Feedback</h1> */}\r\n          <div className = 'center'>\r\n            <h1>Restaurant: {this.state.RestaurantID.toUpperCase()}</h1>\r\n            <h1>Order ID: {this.state.OrderID}</h1>\r\n          </div>\r\n\r\n          \r\n          <Form onSubmit = {this.handleSubmit(user.name.toString())}>\r\n            {/* <Form.Group controlId=\"UserID\">\r\n                  <Form.Label>User ID</Form.Label>\r\n                  <Form.Control type=\"name\"\r\n                                className = 'userid'\r\n                                placeholder=\"Enter user ID\"\r\n                                required\r\n                                // value = {this.state.UserID}\r\n                                value = {user.name}\r\n                                onChange = {this.updateUserID.bind(this)} \r\n                                />\r\n              </Form.Group> */}\r\n\r\n              {/* <Form.Group controlId=\"ItemID\">\r\n                  <Form.Label>Item ID</Form.Label>\r\n                  <Form.Control type=\"name\"\r\n                                className = 'itemid'\r\n                                placeholder=\"Enter item ID\"\r\n                                required\r\n                                value = {this.state.ItemID}\r\n                                onChange = {this.updateItemID.bind(this)}\r\n                                 />\r\n              </Form.Group> */}\r\n\r\n              {/* <Form.Group controlId=\"OrderID\">\r\n                  <Form.Label>Order ID</Form.Label>\r\n                  <Form.Control type=\"name\"\r\n                                className = 'orderid'\r\n                                placeholder=\"Enter order ID\"\r\n                                required\r\n                                value = {this.state.OrderID}\r\n                                onChange = {this.updateOrderID.bind(this)} />\r\n              </Form.Group> */}\r\n\r\n              {/* <Form.Group controlId=\"Price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control type=\"number\"\r\n                                placeholder=\"Enter price in pkr\"\r\n                                required\r\n                                value ={this.state.price}\r\n                                onChange = {this.updatePrice.bind(this)} />\r\n              </Form.Group> */}\r\n\r\n              {/* <Form.Group controlId=\"RestaurantID\">\r\n                  <Form.Label>RestaurantID</Form.Label>\r\n                  <Form.Control type=\"name\"\r\n                                placeholder=\"Enter Restaurant ID\"\r\n                                required\r\n                                value ={this.state.RestaurantID}\r\n                                onChange = {this.updateRestaurantID.bind(this)} />\r\n              </Form.Group> */}\r\n\r\n              <Form.Group controlId=\"Feedback\">\r\n                  <Form.Label>Feedback</Form.Label>\r\n                  <Form.Control type=\"name\"\r\n                                placeholder=\"Enter Feedback\"\r\n                                required\r\n                                value ={this.state.Feedback}\r\n                                onChange = {this.updateFeedback.bind(this)} />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" block>\r\n                  Submit\r\n              </Button>\r\n          </Form>\r\n          <Modal show={this.state.popupshow}>\r\n            <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\r\n              <Modal.Title> {this.state.text} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body> {this.state.text2} </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.refresh}>\r\n                Ok\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </dic>\r\n    );\r\n  }\r\n}\r\n\r\nUserFeedbackPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(UserFeedbackPage);\r\n\r\n// export default UserFeedbackPage;"]},"metadata":{},"sourceType":"module"}