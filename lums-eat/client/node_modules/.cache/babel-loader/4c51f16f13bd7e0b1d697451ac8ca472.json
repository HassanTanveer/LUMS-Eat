{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\components\\\\monthanalyticsview\\\\monthanalyticsview.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport './monthanalyticsview.styles.scss';\n\nclass AnalyticsView extends React.Component {\n  constructor() {\n    super();\n\n    this.totalPrice = () => {\n      let total = 0;\n\n      for (let i = 0; i < this.state.sections.length; i++) {\n        var order = this.state.sections[i];\n        total = total + order.totalPrice;\n      }\n\n      return total;\n    };\n\n    this.findHighest = () => {\n      var most = []; // create an empty array\n\n      for (let i = 0; i < this.state.sections.length; i++) {\n        var check = this.state.sections[i];\n\n        if (check) {\n          var check2 = check.items;\n        }\n\n        for (let j = 0; j < check2.length; j++) {\n          var found = 0;\n\n          if (check2) {\n            var check3 = check2[j];\n          }\n\n          for (let c = 0; c < most.length; c++) {\n            if (most[c].key === check3.name) {\n              most[c].value = most[c].value + parseInt(check3.quantity);\n              found = 1;\n            }\n          }\n\n          if (found === 0) {\n            most.push({\n              key: check3.name,\n              value: parseInt(check3.quantity)\n            });\n          }\n        }\n      }\n\n      var highindex = 0;\n      var highest = 0;\n\n      for (let i = 0; i < most.length; i++) {\n        if (most[i].value > highest) {\n          highest = most[i].value;\n          highindex = i;\n        }\n      }\n\n      var final = most[highindex];\n\n      if (final) {\n        var mostordered = final.key;\n      }\n\n      return mostordered;\n    };\n\n    this.state = {\n      sections: []\n    };\n  }\n\n  componentDidMount() {\n    // const date = this.getCurrentDate();\n    fetch(`/orders/complete/${this.getCurrentDate()}/${localStorage.RestaurantID}`).then(res => res.json()).then(sections => this.setState({\n      sections\n    }));\n  } // countTotal = () => {\n  //   let total = 0\n  //   for (let i = 0; i < this.state.sections.length; i++) {\n  //     total = total + 1;\n  //   }\n  //   return total\n  // }\n\n\n  getCurrentDate(separator = '-') {\n    let newDate = new Date(); // let date = newDate.getDate();\n\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}`;\n  }\n\n  render() {\n    // const total = this.countTotal();\n    const revenue = this.totalPrice();\n    const most = this.findHighest();\n    const date = this.getCurrentDate();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"restaurant-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"TODAY\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"MONTH\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"YEAR\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"top\",\n      to: \"/analytics/total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"TOTAL\")), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Number of orders\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Most ordered item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Revenue\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Month\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, this.state.sections.length), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, most), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, revenue, \" PKR\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, date)))));\n  }\n\n}\n\nexport default AnalyticsView;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/components/monthanalyticsview/monthanalyticsview.component.jsx"],"names":["React","Link","Table","AnalyticsView","Component","constructor","totalPrice","total","i","state","sections","length","order","findHighest","most","check","check2","items","j","found","check3","c","key","name","value","parseInt","quantity","push","highindex","highest","final","mostordered","componentDidMount","fetch","getCurrentDate","localStorage","RestaurantID","then","res","json","setState","separator","newDate","Date","month","getMonth","year","getFullYear","render","revenue","date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nimport './monthanalyticsview.styles.scss';\r\n\r\nclass AnalyticsView extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n      this.state={\r\n      sections: [],\r\n      }\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    // const date = this.getCurrentDate();\r\n    fetch(`/orders/complete/${this.getCurrentDate()}/${localStorage.RestaurantID}`)\r\n    .then(res=> res.json())\r\n    .then(sections => this.setState({sections}))\r\n  }\r\n\r\n  // countTotal = () => {\r\n  //   let total = 0\r\n\r\n  //   for (let i = 0; i < this.state.sections.length; i++) {\r\n  //     total = total + 1;\r\n  //   }\r\n\r\n  //   return total\r\n  // }\r\n\r\n  totalPrice = () => {\r\n    let total = 0\r\n    for (let i = 0; i < this.state.sections.length; i++) {\r\n      var order = this.state.sections[i];\r\n      total = total + order.totalPrice;\r\n    }\r\n    return total\r\n  }\r\n\r\n  findHighest = () => {\r\n    var most = []; // create an empty array\r\n\r\n    for (let i = 0; i < this.state.sections.length; i++)\r\n    {\r\n      var check = this.state.sections[i];    \r\n\r\n      if(check)\r\n      {\r\n        var check2 = check.items;\r\n      }\r\n\r\n      for (let j = 0; j < check2.length; j++)\r\n      {\r\n        var found = 0;\r\n        if(check2)\r\n        {\r\n          var check3 = check2[j];\r\n        }\r\n\r\n        for (let c = 0; c < most.length; c++)\r\n        {\r\n          if(most[c].key === check3.name)\r\n          {\r\n            most[c].value = most[c].value + parseInt(check3.quantity);\r\n            found = 1;\r\n          }\r\n        }\r\n\r\n        if(found === 0)\r\n        {\r\n          most.push({\r\n            key:   check3.name,\r\n            value: parseInt(check3.quantity)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    var highindex = 0;\r\n    var highest = 0;\r\n    for (let i = 0; i < most.length; i++) {\r\n      if (most[i].value > highest){\r\n        highest = most[i].value;\r\n        highindex = i;\r\n      }\r\n    }\r\n    var final = most[highindex];\r\n\r\n    if(final)\r\n    {\r\n      var mostordered = final.key;\r\n    }\r\n\r\n    return mostordered\r\n  }\r\n\r\n  getCurrentDate(separator='-'){\r\n\r\n    let newDate = new Date()\r\n    // let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    \r\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}`\r\n  }\r\n\r\n  render() {\r\n\r\n    // const total = this.countTotal();\r\n    const revenue = this.totalPrice();\r\n    const most = this.findHighest();\r\n    const date = this.getCurrentDate();\r\n\r\n    return (\r\n      <div>\r\n        <div className='restaurant-menu'>\r\n          <div className=\"top\">\r\n            <Link className='top' to='/analytics'>\r\n              TODAY\r\n            </Link>\r\n            <Link className='top' to='/analytics/month'>\r\n              MONTH\r\n            </Link>\r\n            <Link className='top' to='/analytics/year'>\r\n              YEAR\r\n            </Link>\r\n            <Link className='top' to='/analytics/total'>\r\n              TOTAL\r\n            </Link>\r\n          </div>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr className = 'font'>\r\n                <th>Number of orders</th>\r\n                <th>Most ordered item</th>\r\n                <th>Revenue</th>\r\n                <th>Month</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <td className = 'font'>{this.state.sections.length}</td>\r\n              <td className = 'font'>{most}</td>\r\n              <td className = 'font'>{revenue} PKR</td>\r\n              <td className = 'font'>{date}</td>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnalyticsView;\r\n"]},"metadata":{},"sourceType":"module"}