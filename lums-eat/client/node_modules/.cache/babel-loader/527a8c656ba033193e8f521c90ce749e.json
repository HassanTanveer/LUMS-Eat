{"ast":null,"code":"var _jsxFileName = \"/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/order-item/order-item.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './order-item.styles.scss';\n\nconst axios = require('axios');\n\nconst OrderItem = ({\n  OrderID,\n  items,\n  totalPrice,\n  status,\n  Type,\n  userID,\n  userContact,\n  userAddress,\n  history,\n  linkUrl,\n  match\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, OrderID), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }\n    }, item[0], \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inside\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 62\n      }\n    }, item[1]));\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, Type), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, userID), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, userContact), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, userAddress), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, (() => {\n    switch (status) {\n      case \"Dispatched\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"disp\",\n          onClick: () => {\n            let change = {\n              \"OrderID\": OrderID,\n              \"update\": {\n                \"status\": \"Complete\"\n              }\n            };\n            axios.post('/orders/update', change).then(res => {\n              console.log(\"here\");\n              window.emailjs.send('gmail', 1, {\n                message_html: this.state.feedback,\n                from_name: \"Hassan\",\n                reply_to: \"hasanbts.0097@gmail.com\"\n              }).then(res => {\n                console.log('Email successfully sent!');\n              }) // Handle errors here however you like, or use a React error boundary\n              .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n              window.location.reload();\n            }).catch(err => console.log(err));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 45\n          }\n        }, \"Complete\");\n\n      case \"Pending\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"pend\",\n          onClick: () => {\n            let change = {\n              \"OrderID\": OrderID,\n              \"update\": {\n                \"status\": \"Dispatched\"\n              }\n            };\n            axios.post('/orders/update', change).then(res => window.location.reload()).catch(err => console.log(err));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 40\n          }\n        }, \"Dispatch\");\n\n      case \"Complete\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"complete\",\n          onClick: () => {\n            let change = {\n              \"OrderID\": OrderID,\n              \"update\": {\n                \"status\": \"Pending\"\n              }\n            };\n            axios.post('/orders/update', change).then(res => window.location.reload()).catch(err => console.log(err));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, \"Undo\");\n\n      default:\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"button\",\n          onClick: () => alert('button'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 38\n          }\n        }, \"button\");\n    }\n  })()));\n};\n\nexport default withRouter(OrderItem);","map":{"version":3,"sources":["/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/order-item/order-item.component.jsx"],"names":["React","withRouter","axios","require","OrderItem","OrderID","items","totalPrice","status","Type","userID","userContact","userAddress","history","linkUrl","match","map","item","change","post","then","res","console","log","window","emailjs","send","message_html","state","feedback","from_name","reply_to","catch","err","error","location","reload","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './order-item.styles.scss';\n\nconst axios = require('axios')\n\nconst OrderItem = ({ OrderID, items, totalPrice, status, Type, userID, userContact, userAddress,  history, linkUrl, match }) => {\n  return(\n    <>\n        <td className = 'font'>{OrderID}</td>\n        <td className = 'font'>\n            {items.map(item => {\n                return <span className = 'items'>{item[0]} - <span className = 'inside'>{item[1]}</span></span>\n            })}\n        </td>\n        <td className = 'font'>{totalPrice}</td>\n        <td className = 'font'>{Type}</td>\n        <td className = 'font'>{userID}</td>\n        <td className = 'font'>{userContact}</td>\n        <td className = 'font'>{userAddress}</td>\n        <td className = 'font'>{status}</td>\n        <td>{(() => {\n            switch (status) {\n                case \"Dispatched\":   return <span className = 'disp' onClick ={\n                    () => {\n                        let change = {\n                            \"OrderID\": OrderID,\n                            \"update\": {\n                                \"status\": \"Complete\"\n                            }}\n                        axios.post('/orders/update', change)\n                            .then((res) => {\n                                console.log(\"here\")\n                                window.emailjs.send(\n                                    'gmail', 1,\n                                    {message_html: this.state.feedback, from_name: \"Hassan\", reply_to: \"hasanbts.0097@gmail.com\"}\n                                    ).then(res => {\n                                      console.log('Email successfully sent!')\n                                    })\n                                    // Handle errors here however you like, or use a React error boundary\n                                    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))                  \n                                window.location.reload()\n                            })\n                            .catch(err => console.log(err))\n                    }}\n                    >Complete</span>;\n                case \"Pending\": return <span className = 'pend' onClick = {\n                    () => {\n                        let change = {\n                            \"OrderID\": OrderID,\n                            \"update\": {\n                                \"status\": \"Dispatched\"\n                            }}\n                        axios.post('/orders/update', change)\n                        .then((res) => window.location.reload())\n                        .catch(err => console.log(err))\n                    }}\n                    >Dispatch</span>;\n                case \"Complete\": return <span className = 'complete' onClick = {\n                    () => {\n                        let change = {\n                            \"OrderID\": OrderID,\n                            \"update\": {\n                                \"status\": \"Pending\"\n                            }}\n                        axios.post('/orders/update', change)\n                        .then((res) => window.location.reload())\n                        .catch(err => console.log(err))\n                    }}\n                    >Undo</span>;\n                default:      return <span className = 'button' onClick ={() => alert('button')}>button</span>;\n        }\n        })()}\n        </td>\n        \n\n    </>\n  )\n};\nexport default withRouter(OrderItem);"]},"metadata":{},"sourceType":"module"}