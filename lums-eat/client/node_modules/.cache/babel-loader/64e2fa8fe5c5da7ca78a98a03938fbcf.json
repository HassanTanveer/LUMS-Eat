{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\components\\\\placeorder\\\\placeorder.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom'; //import orders from '../../redux/actions/authActions'\n\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../../components/custom-button/custom-button.components';\nimport axios from \"axios\";\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\n\nclass PlaceOrder extends Component {\n  constructor() {\n    super();\n\n    this.orders1 = (newOrder, history) => dispatch => {\n      console.log(newOrder);\n      axios.post(\"/orders/add\", newOrder).then(res => history.push(\"/orders\")); // re-direct to login on successful register\n    };\n\n    this.onOrder = e => {\n      e.preventDefault(); // console.log(this.props.items)\n\n      var item = this.props.items;\n      const newOrder = {\n        OrderID: Math.random().toString(36).substr(2, 9),\n        userID: localStorage.userID,\n        userContact: localStorage.userContact,\n        userName: localStorage.name,\n        items: this.props.items,\n        RestaurantID: item[0].RestaurantID,\n        address: localStorage.address,\n        total: this.props.total,\n        number: localStorage.number,\n        status: \"Ordered\"\n      };\n      axios.post(\"/orders/add\", newOrder).then(res => this.props.gihistory.push(\"/orders\")); //console.log(newOrder)\n      //this.orders1(newOrder, this.props.history)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: this.onOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \" Place Order  \");\n  }\n\n}\n\nPlaceOrder.propTypes = {\n  orders: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PlaceOrder));","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/components/placeorder/placeorder.jsx"],"names":["React","Component","PropTypes","connect","Link","withRouter","CustomButton","axios","createStructuredSelector","selectCartItems","clearItemFromCart","PlaceOrder","constructor","orders1","newOrder","history","dispatch","console","log","post","then","res","push","onOrder","e","preventDefault","item","props","items","OrderID","Math","random","toString","substr","userID","localStorage","userContact","userName","name","RestaurantID","address","total","number","status","gihistory","render","propTypes","orders","func","isRequired","errors","object","mapStateToProps","cartItems","mapDispatchToProps","clearItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAIE;;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,yDAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEF,SACEC,eADF,QAGO,iCAHP;AAKA,SACEC,iBADF,QAGO,+BAHP;;AAOA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAEhCW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAKbC,OALa,GAKH,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEHP,MAAAA,KAAK,CACHY,IADF,CACO,aADP,EACsBL,QADtB,EAEEM,IAFF,CAEOC,GAAG,IAAIN,OAAO,CAACO,IAAR,CAAa,SAAb,CAFd,EAH4C,CAKL;AAIzC,KAdc;;AAAA,SAgBdC,OAhBc,GAgBJC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF,GADc,CAEf;;AACA,UAAIC,IAAI,GAAE,KAAKC,KAAL,CAAWC,KAArB;AAEA,YAAMd,QAAQ,GAAG;AAChBe,QAAAA,OAAO,EAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CADM;AAEhBC,QAAAA,MAAM,EAAEC,YAAY,CAACD,MAFL;AAGhBE,QAAAA,WAAW,EAAED,YAAY,CAACC,WAHV;AAIhBC,QAAAA,QAAQ,EAAEF,YAAY,CAACG,IAJP;AAKhBV,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KALF;AAMhBW,QAAAA,YAAY,EAAEb,IAAI,CAAC,CAAD,CAAJ,CAAQa,YANN;AAOhBC,QAAAA,OAAO,EAAEL,YAAY,CAACK,OAPN;AAQhBC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KARF;AAShBC,QAAAA,MAAM,EAAEP,YAAY,CAACO,MATL;AAUhBC,QAAAA,MAAM,EAAG;AAVO,OAAjB;AAaDpC,MAAAA,KAAK,CACAY,IADL,CACU,aADV,EACyBL,QADzB,EAEKM,IAFL,CAEUC,GAAG,IAAI,KAAKM,KAAL,CAAWiB,SAAX,CAAqBtB,IAArB,CAA0B,SAA1B,CAFjB,EAlBgB,CAsBhB;AAGA;AAGE,KA5Ca;AAIb;;AA6CFuB,EAAAA,MAAM,GAAG;AAMP,wBAEI,oBAAC,YAAD;AAAe,MAAA,OAAO,EAAI,KAAKtB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAQD;;AAjEgC;;AAoEnCZ,UAAU,CAACmC,SAAX,GAAuB;AACnBC,EAAAA,MAAM,EAAE7C,SAAS,CAAC8C,IAAV,CAAeC,UADJ;AAEnBC,EAAAA,MAAM,EAAEhD,SAAS,CAACiD,MAAV,CAAiBF;AAFN,CAAvB;AAKE,MAAMG,eAAe,GAAG5C,wBAAwB,CAAC;AAC/C6C,EAAAA,SAAS,EAAE5C;AADoC,CAAD,CAAhD;;AAMA,MAAM6C,kBAAkB,GAAGtC,QAAQ,KAAK;AAEtCuC,EAAAA,SAAS,EAAG7B,IAAI,IAAIV,QAAQ,CAACN,iBAAiB,CAACgB,IAAD,CAAlB;AAFU,CAAL,CAAnC;;AAKF,eAAerB,UAAU,CAACF,OAAO,CAC/BiD,eAD+B,EACdE,kBADc,CAAP,CAExB3C,UAFwB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n  //import orders from '../../redux/actions/authActions'\r\n\r\n  import { withRouter } from 'react-router-dom';\r\n  import CustomButton from '../../components/custom-button/custom-button.components'\r\n  import axios from \"axios\";\r\n\r\n  import { createStructuredSelector } from 'reselect';\r\n\r\nimport {\r\n  selectCartItems\r\n\r\n} from '../../redux/cart/cart.selectors';\r\n\r\nimport {\r\n  clearItemFromCart\r\n  \r\n} from '../../redux/cart/cart.actions';\r\n\r\n\r\n\r\nclass PlaceOrder extends Component { \r\n    \r\n   constructor() {\r\n     super();\r\n     \r\n    \r\n   } \r\n    orders1 = (newOrder, history) => dispatch => {\r\n        console.log(newOrder)\r\n        \r\n     axios\r\n      .post(\"/orders/add\", newOrder)\r\n      .then(res => history.push(\"/orders\")) // re-direct to login on successful register\r\n      \r\n\r\n      \r\n  };\r\n  \r\n   onOrder = e => {\r\n    e.preventDefault(); \r\n   // console.log(this.props.items)\r\n   var item= this.props.items\r\n\r\n   const newOrder = {\r\n    OrderID : Math.random().toString(36).substr(2, 9),\r\n    userID: localStorage.userID,\r\n    userContact: localStorage.userContact,\r\n    userName: localStorage.name,\r\n    items: this.props.items,\r\n    RestaurantID: item[0].RestaurantID,\r\n    address: localStorage.address,\r\n    total: this.props.total,\r\n    number: localStorage.number,\r\n    status : \"Ordered\"\r\n  };\r\n\r\n  axios\r\n      .post(\"/orders/add\", newOrder)\r\n      .then(res => this.props.gihistory.push(\"/orders\"))\r\n\r\n  //console.log(newOrder)\r\n\r\n\r\n  //this.orders1(newOrder, this.props.history)\r\n\r\n  \r\n   }\r\n    \r\n    \r\n\r\n\r\n  render() {\r\n \r\n   \r\n    \r\n   \r\n    \r\n    return (\r\n      \r\n        <CustomButton  onClick = {this.onOrder } > Place Order  </CustomButton>\r\n    \r\n     \r\n   \r\n    );\r\n      \r\n  };\r\n}\r\n\r\nPlaceOrder.propTypes = {\r\n    orders: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n    \r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    \r\n    clearItem : item => dispatch(clearItemFromCart(item))\r\n  });\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(PlaceOrder));\r\n\r\n\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}