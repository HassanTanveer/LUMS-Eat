{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{createStructuredSelector}from'reselect';import CheckoutItem from'../../components/checkout-item/checkout-item.component';import PlaceOrder from'../../components/placeorder/placeorder';import{selectCartItems,selectCartTotal}from'../../redux/cart/cart.selectors';import'./checkout.styles.scss';var CheckoutPage=function CheckoutPage(_ref){var cartItems=_ref.cartItems,total=_ref.total;var button;if(total!==0){button=/*#__PURE__*/React.createElement(PlaceOrder,{items:cartItems,total:total});}return/*#__PURE__*/React.createElement(\"div\",{className:\"checkout-page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"checkout-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Product\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Description\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Quantity\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Price\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Remove\"))),cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CheckoutItem,{key:cartItem.id,cartItem:cartItem});}),/*#__PURE__*/React.createElement(\"div\",{className:\"total\"},\"TOTAL: Rs.\",total),button);};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,total:selectCartTotal});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","CheckoutItem","PlaceOrder","selectCartItems","selectCartTotal","CheckoutPage","cartItems","total","button","map","cartItem","id","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wCAAvB,CAGA,OACEC,eADF,CAEEC,eAFF,KAGO,iCAHP,CAKA,MAAO,wBAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA0B,IAAvBC,CAAAA,SAAuB,MAAvBA,SAAuB,CAAZC,KAAY,MAAZA,KAAY,CAG3C,GAAIC,CAAAA,MAAJ,CACA,GAAID,KAAK,GAAG,CAAZ,CAAe,CACbC,MAAM,cAAE,oBAAC,UAAD,EAAY,KAAK,CAAGF,SAApB,CAAgC,KAAK,CAAGC,KAAxC,EAAR,CAEE,CAEN,mBACA,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,0CADF,CADF,cAIE,2BAAK,SAAS,CAAC,cAAf,eACE,8CADF,CAJF,cAOE,2BAAK,SAAS,CAAC,cAAf,eACE,2CADF,CAPF,cAUE,2BAAK,SAAS,CAAC,cAAf,eACE,wCADF,CAVF,cAaE,2BAAK,SAAS,CAAC,cAAf,eACE,yCADF,CAbF,CADF,CAkBGD,SAAS,CAACG,GAAV,CAAc,SAAAC,QAAQ,qBACrB,oBAAC,YAAD,EAAc,GAAG,CAAEA,QAAQ,CAACC,EAA5B,CAAgC,QAAQ,CAAED,QAA1C,EADqB,EAAtB,CAlBH,cAqBE,2BAAK,SAAS,CAAC,OAAf,eAAkCH,KAAlC,CArBF,CAuBGC,MAvBH,CADA,CA2BD,CApCD,CAsCA,GAAMI,CAAAA,eAAe,CAAGZ,wBAAwB,CAAC,CAC/CM,SAAS,CAAEH,eADoC,CAE/CI,KAAK,CAAEH,eAFwC,CAAD,CAAhD,CAKA,cAAeL,CAAAA,OAAO,CAACa,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport PlaceOrder from '../../components/placeorder/placeorder';\n\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../redux/cart/cart.selectors';\n\nimport './checkout.styles.scss';\n\nconst CheckoutPage = ({ cartItems, total }) => {\n  \n   \n    let button;\n    if (total!==0) {\n      button= <PlaceOrder items= {cartItems}  total= {total}/>\n      \n       } \n \n  return(\n  <div className='checkout-page'>\n    <div className='checkout-header'>\n      <div className='header-block'>\n        <span>Product</span>\n      </div>\n      <div className='header-block'>\n        <span>Description</span>\n      </div>\n      <div className='header-block'>\n        <span>Quantity</span>\n      </div>\n      <div className='header-block'>\n        <span>Price</span>\n      </div>\n      <div className='header-block'>\n        <span>Remove</span>\n      </div>\n    </div>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <div className='total'>TOTAL: Rs.{total}</div>\n    \n    {button}\n  </div>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}