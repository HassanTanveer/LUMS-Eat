{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/completeordertable/completeordertable.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './completeordertable.styles.scss';\nimport { Link } from 'react-router-dom'; // const axios = require('axios')\n\nconst CompleteOrderTable = ({\n  OrderID,\n  items,\n  totalPrice,\n  status,\n  Type,\n  userAddress,\n  RestaurantID,\n  history,\n  linkUrl,\n  match\n}) => {\n  fetch(`/feedback/all`).then(res => res.json());\n  console.log(\"CHECK\"); // .then(sections => this.setState({sections}))\n  // for (let i = 0; i < this.state.sections.length; i++) {\n  //   var order = this.state.sections[i];\n  //   console.log(\"CHECK\", i)\n  //   console.log(order)\n  //   console.log(order.OrderID)\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, OrderID), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, (() => {\n    switch (RestaurantID) {\n      case \"zakir\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 40\n          }\n        }, \"Zakir Tikka\");\n\n      case \"jammin\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 41\n          }\n        }, \"Jammin Java\");\n\n      case \"delish\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }\n        }, \"Delish Pizza Bar\");\n\n      case \"tabaq\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 40\n          }\n        }, \"Tabaq\");\n\n      case \"flavors\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 42\n          }\n        }, \"Flavors\");\n\n      case \"subway\":\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 41\n          }\n        }, \"Subway\");\n\n      default:\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 38\n          }\n        }, RestaurantID);\n    }\n  })()), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }\n    }, item.name, \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inside\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 64\n      }\n    }, item.quantity));\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, Type), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, userAddress), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, status), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"FeedbackButton\",\n    to: {\n      pathname: '/userfeedback',\n      state: {\n        order: OrderID,\n        restaurant: RestaurantID,\n        item: items\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Give Feedback\")));\n};\n\nexport default withRouter(CompleteOrderTable);","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/completeordertable/completeordertable.component.jsx"],"names":["React","withRouter","Link","CompleteOrderTable","OrderID","items","totalPrice","status","Type","userAddress","RestaurantID","history","linkUrl","match","fetch","then","res","json","console","log","map","item","name","quantity","pathname","state","order","restaurant"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './completeordertable.styles.scss';\nimport { Link } from 'react-router-dom';\n\n\n// const axios = require('axios')\n\nconst CompleteOrderTable = ({ OrderID, items, totalPrice, status, Type, userAddress, RestaurantID, history, linkUrl, match }) => {\n  fetch(`/feedback/all`)\n    .then(res=> res.json())\n    console.log(\"CHECK\")\n    // .then(sections => this.setState({sections}))\n\n  // for (let i = 0; i < this.state.sections.length; i++) {\n  //   var order = this.state.sections[i];\n\n  //   console.log(\"CHECK\", i)\n  //   console.log(order)\n  //   console.log(order.OrderID)\n    \n  // }\n\n  return(\n    <>\n        <td className = 'font'>{OrderID}</td>\n        <td className = 'font'>{(() => {\n            switch (RestaurantID) {\n                case \"zakir\":   return <span>Zakir Tikka</span>\n                case \"jammin\":   return <span>Jammin Java</span>\n                case \"delish\":   return <span>Delish Pizza Bar</span>\n                case \"tabaq\":   return <span>Tabaq</span>\n                case \"flavors\":   return <span>Flavors</span>\n                case \"subway\":   return <span>Subway</span>            \n                default:      return <span >{RestaurantID}</span>;\n        }\n        })()}</td>\n        <td className = 'font'>\n            {items.map(item => {\n                return <span className = 'items'>{item.name} - <span className = 'inside'>{item.quantity}</span></span>\n            })}\n        </td>\n        <td className = 'font'>{totalPrice}</td>\n        <td className = 'font'>{Type}</td>\n        <td className = 'font'>{userAddress}</td>\n        <td className = 'font'>{status}</td>\n        <td className = 'font'>\n          <Link className='FeedbackButton' to={{pathname: '/userfeedback', state: {order: OrderID, restaurant:RestaurantID, item: items}}}>\n            Give Feedback\n          </Link>\n        </td>\n\n    </>\n  )\n};\nexport default withRouter(CompleteOrderTable);"]},"metadata":{},"sourceType":"module"}