{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { withRouter } from 'react-router-dom';\nimport './notifications.css';\nimport './collection-item.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors'; // import {compose} from 'redux';\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// import { Link } from 'react-router-dom';\n\nconst CollectionItem = ({\n  item,\n  addItem,\n  history,\n  match,\n  cartItems,\n  itemCount\n}) => {\n  const {\n    name,\n    price,\n    imageurl\n  } = item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageurl})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"PKR \", price)), localStorage.email ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      var rid;\n      rid = cartItems.map(item => item.RestaurantID);\n      rid = rid[0];\n\n      if (itemCount === 0) {\n        addItem(item);\n        NotificationManager.warning('Item added to cart');\n      }\n\n      if (rid === item.RestaurantID) {\n        addItem(item);\n        NotificationManager.warning('Item added to cart');\n      } else if (rid !== item.RestaurantID && itemCount !== 0) {\n        NotificationManager.warning('Can not add items from multiple restaurants');\n      }\n    },\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Add to cart\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/login');\n      window.location.reload();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  itemCount: selectCartItemsCount\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CollectionItem));","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","CustomButton","addItem","withRouter","createStructuredSelector","NotificationContainer","NotificationManager","selectCartItems","selectCartItemsCount","CollectionItem","item","history","match","cartItems","itemCount","name","price","imageurl","backgroundImage","localStorage","email","rid","map","RestaurantID","warning","push","window","location","reload","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { withRouter } from 'react-router-dom';\nimport './notifications.css';\nimport './collection-item.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nimport {\n  selectCartItems\n\n} from '../../redux/cart/cart.selectors';\n\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\n// import {compose} from 'redux';\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// import { Link } from 'react-router-dom';\n\nconst CollectionItem = ({ item, addItem, history, match, cartItems, itemCount }) => {\n  const { name, price, imageurl } = item;\n\n  \n  \n\n  return (\n    <div className='collection-item'>\n       <NotificationContainer/>\n      <div\n        className='image'\n        style={{\n          backgroundImage: `url(${imageurl})`\n        }}\n      />\n      <div className='collection-footer'>\n        <span className='name'>{name}</span>\n        <span className='price'>PKR {price}</span>\n      </div>\n      {localStorage.email ?(\n      <CustomButton onClick={() => {\n        var rid\n        rid= cartItems.map((item =>  item.RestaurantID))\n        rid= rid[0]\n        \n        \n        if(itemCount===0){\n        addItem(item);\n        NotificationManager.warning('Item added to cart');\n\n        }      \n        \n         if(rid=== item.RestaurantID){ addItem(item);  NotificationManager.warning('Item added to cart'); }\n        \n        else if(rid!==item.RestaurantID&& itemCount!==0) {  NotificationManager.warning('Can not add items from multiple restaurants');    }\n        }} inverted>\n        Add to cart \n      </CustomButton>):\n      (<CustomButton onClick={()=>  {history.push('/login'); window.location.reload()}}>\n        Add to cart\n      </CustomButton>\n      )\n      }\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  \n\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  itemCount: selectCartItemsCount\n  \n  \n});\n\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CollectionItem))"]},"metadata":{},"sourceType":"module"}