{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\components\\\\collection\\\\collection.jsx\";\nimport React from \"react\"; // import ReactDOM from \"react-dom\";\n\nimport './collection.styles.scss';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nclass Collection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.groupBy = (array, key) => {\n      // Return the end result\n      return array.reduce((result, currentValue) => {\n        // If an array already present for key, push it to the array. Else create an array and push the object\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue); // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n\n        return result;\n      }, {}); // empty object is the initial value for result object\n    };\n\n    this.state = {\n      collection: []\n    };\n  }\n\n  componentDidMount() {\n    //console.log(`This is match ${this.props.match.params.id}`)\n    fetch(`/menu/find/${this.props.match.params.id}`).then(res => res.json()).then(collection => this.setState({\n      collection\n    }));\n  }\n\n  render() {\n    var result = {};\n    this.state.collection.reduce((result, currentValue) => {\n      // If an array already present for key, push it to the array. Else create an array and push the object\n      (result[currentValue['category']] = result[currentValue['category']] || []).push(currentValue); // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n    });\n    console.log(result); //const  categories=   _.groupBy(this.state.collection, 'category')\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.props.match.params.id, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, \"categories\"));\n  }\n\n}\n\nexport default Collection;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/components/collection/collection.jsx"],"names":["React","CollectionItem","Collection","Component","constructor","props","groupBy","array","key","reduce","result","currentValue","push","state","collection","componentDidMount","fetch","match","params","id","then","res","json","setState","render","console","log"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,0BAAP;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;;AAGA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBpBC,OAtBoB,GAsBV,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvB;AACA,aAAOD,KAAK,CAACE,MAAN,CAAa,CAACC,MAAD,EAASC,YAAT,KAA0B;AAC5C;AACA,SAACD,MAAM,CAACC,YAAY,CAACH,GAAD,CAAb,CAAN,GAA4BE,MAAM,CAACC,YAAY,CAACH,GAAD,CAAb,CAAN,IAA6B,EAA1D,EAA8DI,IAA9D,CACED,YADF,EAF4C,CAK5C;;AACA,eAAOD,MAAP;AACD,OAPM,EAOJ,EAPI,CAAP,CAFuB,CASf;AACT,KAhCkB;;AAGf,SAAKG,KAAL,GAAW;AACXC,MAAAA,UAAU,EAAE;AADD,KAAX;AAMH;;AAIDC,EAAAA,iBAAiB,GACjB;AAEC;AACCC,IAAAA,KAAK,CAAE,cAAa,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA1C,CAAL,CACGC,IADH,CACQC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADd,EAEGF,IAFH,CAEQN,UAAU,IAAI,KAAKS,QAAL,CAAc;AAACT,MAAAA;AAAD,KAAd,CAFtB;AAGD;;AAcDU,EAAAA,MAAM,GAAG;AAEP,QAAId,MAAM,GAAE,EAAZ;AACA,SAAKG,KAAL,CAAWC,UAAX,CAAsBL,MAAtB,CAA6B,CAACC,MAAD,EAASC,YAAT,KAA0B;AACrD;AACA,OAACD,MAAM,CAACC,YAAY,CAAC,UAAD,CAAb,CAAN,GAAmCD,MAAM,CAACC,YAAY,CAAC,UAAD,CAAb,CAAN,IAAoC,EAAxE,EAA4EC,IAA5E,CACED,YADF,EAFqD,CAKrD;AACD,KAND;AAQEc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ,EAXK,CAcL;;AAIJ,wBAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKL,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,MADA,eAEA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CAHF;AAYC;;AAlEoC;;AAuEvC,eAAejB,UAAf","sourcesContent":["\r\nimport React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport './collection.styles.scss';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\n\r\nclass Collection extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n        this.state={\r\n        collection: [],\r\n        \r\n        }\r\n \r\n      \r\n    }\r\n\r\n    \r\n  \r\n    componentDidMount( )\r\n    {\r\n      \r\n     //console.log(`This is match ${this.props.match.params.id}`)\r\n      fetch(`/menu/find/${this.props.match.params.id}`)\r\n        .then(res=> res.json())\r\n        .then(collection => this.setState({collection}))\r\n    }\r\n\r\n   groupBy = (array, key) => {\r\n      // Return the end result\r\n      return array.reduce((result, currentValue) => {\r\n        // If an array already present for key, push it to the array. Else create an array and push the object\r\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n          currentValue\r\n        );\r\n        // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n        return result;\r\n      }, {}); // empty object is the initial value for result object\r\n    };\r\n  \r\n    render() {\r\n\r\n      var result= {}\r\n      this.state.collection.reduce((result, currentValue) => {\r\n        // If an array already present for key, push it to the array. Else create an array and push the object\r\n        (result[currentValue['category']] = result[currentValue['category']] || []).push(\r\n          currentValue\r\n        );\r\n        // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n      })\r\n\r\n        console.log(result)\r\n\r\n       \r\n        //const  categories=   _.groupBy(this.state.collection, 'category')\r\n       \r\n        \r\n \r\n    return (\r\n      \r\n  \r\n      <div className='collection-page'>\r\n      <h2 className='title'>{this.props.match.params.id} </h2>\r\n      <div className='items'>\r\n        categories\r\n      \r\n        \r\n      </div>\r\n    </div>\r\n    );\r\n    }\r\n  \r\n    \r\n  }\r\n\r\n  export default Collection"]},"metadata":{},"sourceType":"module"}