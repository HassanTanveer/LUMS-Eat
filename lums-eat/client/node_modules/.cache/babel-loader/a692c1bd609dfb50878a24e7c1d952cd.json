{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAEJ,cAAc,CACxC,CAACC,UAAD,CADwC,EAEvCE,IAAD,IAAUA,IAAI,CAACE,SAFyB,CAArC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAGA,IAAI,CAACI,MAFgC,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAER,cAAc,CAC7C,CAACI,eAAD,CAD6C,EAE7CC,SAAS,IACTA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KACnBD,mBAAmB,GAAGC,QAAQ,CAACC,QAD7B,EACuC,CADvC,CAH6C,CAA1C;AAQP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IACPA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KACnBD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAmBD,QAAQ,CAACG,KADhD,EACuD,CADvD,CAHyC,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const selectCartItems= createSelector(\r\n    [selectCart], \r\n    (cart) => cart.cartItems\r\n);\r\n\r\nexport const selectCartHidden = createSelector(\r\n  [selectCart],\r\n  cart=> cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount= createSelector(\r\n    [selectCartItems],\r\n    cartItems =>\r\n    cartItems.reduce((accumalatedQuantity, cartItem)=> \r\n  accumalatedQuantity + cartItem.quantity ,0)\r\n\r\n);\r\n\r\nexport const selectCartTotal = createSelector(\r\n  [selectCartItems],\r\n  cartItems =>\r\n    cartItems.reduce((accumalatedQuantity, cartItem)=> \r\n  accumalatedQuantity + cartItem.quantity* cartItem.price ,0)\r\n);"]},"metadata":{},"sourceType":"module"}