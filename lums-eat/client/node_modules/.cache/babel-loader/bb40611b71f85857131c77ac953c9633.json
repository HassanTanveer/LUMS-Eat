{"ast":null,"code":"var _jsxFileName = \"/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; // import PropTypes from \"prop-types\";\n\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/logo.svg\";\nimport { setUserLoading } from \"../../redux/actions/authActions\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport './header.styles.scss'; // import { logoutUser } from \"../../redux/actions/authActions\";\n\nimport Logout from '../../components/logout/logout';\nconsole.log(localStorage.isRest);\n\nconst Header = ({\n  currentUser,\n  hidden,\n  check\n}) => {\n  let createNotification = type => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n\n        default:\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n      }\n    };\n  };\n\n  let button;\n  console.log(localStorage);\n\n  if (!localStorage.isRest) {\n    if (localStorage.email) {\n      button = /*#__PURE__*/React.createElement(Link, {\n        className: \"option\",\n        to: \"/orders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }\n      }, \"ORDERS\");\n    } else {\n      button = /*#__PURE__*/React.createElement(Link, {\n        className: \"option\",\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, \"ORDERS\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"title1\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"  \", \" \"), /*#__PURE__*/React.createElement(Link, {\n    className: \"title1\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"LUMS\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"title\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"EAT\")) : /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"title1\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"  \", \" \"), /*#__PURE__*/React.createElement(Link, {\n    className: \"title1\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"LUMS\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"title\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"EAT\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, button, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createNotification('info'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Info\"), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/analytics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"RESTAURANT ANALYTICS\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"RESTAURANT\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/menu-update\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"MENU AVAILABILITY\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"FEEDBACK\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/add-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"ADD\") : console.log('Not rest'), localStorage.email ? /*#__PURE__*/React.createElement(Logout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"LOGIN\"), /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), localStorage.isRest ? console.log('Not rest') : /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  })), hidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 22\n    }\n  }));\n}; // Header.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   hidden: selectCartHidden\n// })\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: setUserLoading,\n  hidden: selectCartHidden\n});\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/header/header.component.jsx"],"names":["React","Link","connect","createStructuredSelector","CartIcon","CartDropdown","selectCartHidden","setUserLoading","NotificationContainer","NotificationManager","Logout","console","log","localStorage","isRest","Header","currentUser","hidden","check","createNotification","type","info","success","warning","error","alert","button","email","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {createStructuredSelector} from 'reselect';\n// import PropTypes from \"prop-types\";\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport {selectCartHidden} from '../../redux/cart/cart.selectors';\nimport {ReactComponent as Logo } from '../../assets/logo.svg';\nimport { setUserLoading } from \"../../redux/actions/authActions\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport './header.styles.scss';\n// import { logoutUser } from \"../../redux/actions/authActions\";\nimport Logout from '../../components/logout/logout';\n\nconsole.log(localStorage.isRest)\n\n\nconst Header = ({ currentUser, hidden, check }) => {\n\n  let createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n        break\n        default : NotificationManager.error('Error message', 'Click me!', 5000, () => {\n          alert('callback');\n        });\n      }\n  };\n}\n\n  let button\n\n  console.log(localStorage)\n  \n    if( !localStorage.isRest) {\n      if(localStorage.email) {\n        button=  <Link className='option' to='/orders'>\n        ORDERS\n      </Link>} \n      else{\n        button= <Link className='option' to='/login'>\n        ORDERS\n      </Link>  \n      }\n    }\n       \n  return(\n  <div className='header'>\n    {localStorage.isRest ? (\n      <Link className='logo-container' to='/restaurant'>\n        <Logo className='logo' />\n        <Link className='title1' to='/restaurant'>{\"  \"} </Link>\n        <Link className='title1' to='/restaurant'>{\"LUMS\"}</Link>\n        <Link className='title' to='/restaurant'>{\"EAT\"}</Link>\n      </Link>) : (\n      <Link className='logo-container' to='/'>\n        <Logo className='logo' />\n        <Link className='title1' to='/'>{\"  \"} </Link>\n        <Link className='title1' to='/'>{\"LUMS\"}</Link>\n        <Link className='title' to='/'>{\"EAT\"}</Link>\n      </Link>\n    )}\n\n    <div className='options'>\n      {button}\n\n      <button onClick = {createNotification('info')}>Info</button>\n      {localStorage.isRest ?(\n      <Link className='option' to='/analytics'>\n        RESTAURANT ANALYTICS\n      </Link>\n      ) : \n      (console.log('Not rest')) }\n      \n      {localStorage.isRest ?(\n      <Link className='option' to='/restaurant'>\n        RESTAURANT\n      </Link>\n      ) : \n      (console.log('Not rest')) }\n\n      \n      {localStorage.isRest ?(\n      <Link className='option' to='/menu-update'>\n        MENU AVAILABILITY\n      </Link>\n      ) : \n      (console.log('Not rest')) } \n\n      {localStorage.isRest ?(\n      <Link className='option' to='/feedback'>\n        FEEDBACK\n      </Link>\n      ) : \n      (console.log('Not rest')) }  \n\n     \n      {localStorage.isRest ?(\n      <Link className='option' to='/add-menu'>\n        ADD\n      </Link>\n      ) : \n      (console.log('Not rest')) }\n     {localStorage.email ? (\n       <Logout />\n     ):\n     (\n      <Link className='option' to='/login'>\n      LOGIN\n    </Link>\n\n     )}\n\n    <NotificationContainer/>\n    \n    {localStorage.isRest ?(\n      (console.log('Not rest'))\n      ) : \n      <CartIcon />\n    }\n      \n    </div>\n    \n   \n    {hidden ? null : <CartDropdown />}\n  </div>\n\n  )\n};\n\n\n\n// Header.propTypes = {\n//   auth: PropTypes.object.isRequired,\n  \n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   hidden: selectCartHidden\n// })\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser:setUserLoading,\n  hidden: selectCartHidden,\n})\n\n\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}