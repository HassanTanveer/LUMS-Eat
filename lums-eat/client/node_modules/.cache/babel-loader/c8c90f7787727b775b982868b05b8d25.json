{"ast":null,"code":"var _jsxFileName = \"/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/input-form/input-form.component.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './input-form.styles.scss';\n\nconst axios = require('axios');\n\nclass InputForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = text => event => {\n      console.log(text);\n      event.preventDefault();\n      let details = {\n        \"ItemID\": this.state.ItemID,\n        \"RestaurantID\": this.state.RestaurantID,\n        \"name\": this.state.name,\n        \"description\": this.state.description,\n        \"category\": this.state.category,\n        \"availability\": this.state.availability,\n        \"price\": this.state.price,\n        \"imageurl\": this.state.imageurl\n      };\n      axios.post('/menu/add', details).then(res => this.setState({\n        text2: 'Item has been added to menu!'\n      }), this.setState({\n        popupshow: true\n      })).catch(err => this.setState({\n        text: 'Error'\n      }), this.setState({\n        text2: 'Could not add item to menu!'\n      }), this.setState({\n        popupshow: true\n      }));\n    };\n\n    this.refresh = event => {\n      window.location.reload();\n    };\n\n    this.state = {\n      // check: [],\n      // check2: [],\n      ItemID: '',\n      RestaurantID: 'zakir',\n      name: '',\n      description: '',\n      category: '',\n      availability: 'Yes',\n      price: '',\n      imageurl: '',\n      popupshow: false,\n      text: 'Item Added',\n      text2: 'Item has been added to menu!'\n    };\n  } // componentDidMount(){\n  //   fetch('/menu/all')\n  //   .then(res=> res.json())\n  //   .then(check => this.setState({check}))\n  // }\n\n\n  updateID(event) {\n    this.setState({\n      ItemID: event.target.value\n    });\n  }\n\n  updateName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  updatePrice(event) {\n    this.setState({\n      price: event.target.value\n    });\n  }\n\n  updateDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  updateCategory(event) {\n    this.setState({\n      category: event.target.value\n    });\n  }\n\n  updateImage(event) {\n    this.setState({\n      imageurl: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Add Item to Menu\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit(user.name.toString()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"ItemID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Item ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      className: \"itemid\",\n      placeholder: \"Enter item ID\",\n      required: true,\n      value: this.state.ItemID,\n      onChange: this.updateID.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Item Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      className: \"itemname\",\n      placeholder: \"Enter item name\",\n      required: true,\n      value: this.state.name,\n      onChange: this.updateName.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"Enter price in pkr\",\n      required: true,\n      value: this.state.price,\n      onChange: this.updatePrice.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter item description\",\n      required: true,\n      value: this.state.description,\n      onChange: this.updateDescription.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter item category\",\n      required: true,\n      value: this.state.category,\n      onChange: this.updateCategory.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Enter image url\",\n      required: true,\n      value: this.state.imageurl,\n      onChange: this.updateImage.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Add Item\"), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.popupshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: () => this.setState({\n        popupshow: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \" \", this.state.text, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \" \", this.state.text2, \" \"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Ok\")))));\n  }\n\n}\n\nInputForm.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(InputForm); // export default InputForm;","map":{"version":3,"sources":["/Users/mzaintariq/Documents/GitHub/LUMS-Eat/lums-eat/client/src/components/input-form/input-form.component.jsx"],"names":["React","Form","Button","Modal","axios","require","InputForm","Component","constructor","handleSubmit","text","event","console","log","preventDefault","details","state","ItemID","RestaurantID","name","description","category","availability","price","imageurl","post","then","res","setState","text2","popupshow","catch","err","refresh","window","location","reload","updateID","target","value","updateName","updatePrice","updateDescription","updateCategory","updateImage","render","user","props","auth","toString","bind","propTypes","logoutUser","PropTypes","func","isRequired","object","mapStateToProps","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport './input-form.styles.scss';\n\nconst axios = require('axios')\n\nclass InputForm extends React.Component {\n  constructor() {\n    super();\n\n      this.state={\n        // check: [],\n        // check2: [],\n\n        ItemID: '',\n        RestaurantID: 'zakir',\n        name: '',\n        description: '',\n        category: '',\n        availability: 'Yes',\n        price: '',\n        imageurl: '',\n\n        popupshow: false,\n        text: 'Item Added',\n        text2: 'Item has been added to menu!'\n      }  \n  }\n\n  // componentDidMount(){\n  //   fetch('/menu/all')\n  //   .then(res=> res.json())\n  //   .then(check => this.setState({check}))\n  // }\n\n  updateID(event) {\n    this.setState({ItemID: event.target.value})\n  }\n\n  updateName(event) {\n    this.setState({name: event.target.value})\n  }\n\n  updatePrice(event) {\n    this.setState({price: event.target.value})\n  }\n\n  updateDescription(event) {\n    this.setState({description: event.target.value})\n  }\n\n  updateCategory(event) {\n    this.setState({category: event.target.value})\n  }\n\n  updateImage(event) {\n    this.setState({imageurl: event.target.value})\n  }\n\n  handleSubmit = (text) => (event) => {\n    console.log(text);\n    event.preventDefault();\n    let details = {\n      \"ItemID\": this.state.ItemID,\n      \"RestaurantID\": this.state.RestaurantID,\n\t    \"name\": this.state.name,\n\t    \"description\": this.state.description,\n\t    \"category\": this.state.category,\n\t    \"availability\": this.state.availability,\n\t    \"price\": this.state.price,\n\t    \"imageurl\": this.state.imageurl\n      }\n    axios.post('/menu/add', details)\n      .then((res) => this.setState({text2: 'Item has been added to menu!'}), this.setState({popupshow: true}))\n      .catch(err => this.setState({text: 'Error'}), this.setState({text2: 'Could not add item to menu!'}), this.setState({popupshow: true}))\n  }\n\n  refresh = (event) => {\n    window.location.reload();\n  }\n\n  render() {\n    const { user } = this.props.auth;\n    return (\n      <div className = 'check'>\n        <h1>Add Item to Menu</h1>\n        {/* <h1>\n          {this.state.check.map((item) =>\n            <h>{item.ItemID} </h>\n          )}\n        </h1> */}\n\n        \n        <Form onSubmit = {this.handleSubmit(user.name.toString())}>\n          <Form.Group controlId=\"ItemID\">\n                <Form.Label>Item ID</Form.Label>\n                <Form.Control type=\"name\"\n                              className = 'itemid'\n                              placeholder=\"Enter item ID\"\n                              required\n                              value = {this.state.ItemID}\n                              onChange = {this.updateID.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Name\">\n                <Form.Label>Item Name</Form.Label>\n                <Form.Control type=\"name\"\n                              className = 'itemname'\n                              placeholder=\"Enter item name\"\n                              required\n                              value = {this.state.name}\n                              onChange = {this.updateName.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Price\">\n                <Form.Label>Price</Form.Label>\n                <Form.Control type=\"number\"\n                              placeholder=\"Enter price in pkr\"\n                              required\n                              value ={this.state.price}\n                              onChange = {this.updatePrice.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control type=\"name\"\n                              placeholder=\"Enter item description\"\n                              required\n                              value ={this.state.description}\n                              onChange = {this.updateDescription.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Category\">\n                <Form.Label>Category</Form.Label>\n                <Form.Control type=\"name\"\n                              placeholder=\"Enter item category\"\n                              required\n                              value ={this.state.category}\n                              onChange = {this.updateCategory.bind(this)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"Image\">\n                <Form.Label>Image</Form.Label>\n                <Form.Control\n                              type=\"name\"\n                              placeholder=\"Enter image url\"\n                              required\n                              value ={this.state.imageurl}\n                              onChange = {this.updateImage.bind(this)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" block>\n                Add Item\n            </Button>\n\n            <Modal show={this.state.popupshow}>\n              <Modal.Header closeButton onClick={()=> this.setState({popupshow: false})}>\n                <Modal.Title> {this.state.text} </Modal.Title>\n              </Modal.Header>\n              <Modal.Body> {this.state.text2} </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"primary\" onClick={this.refresh}>\n                  Ok\n                </Button>\n              </Modal.Footer>\n            </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nInputForm.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(InputForm);\n\n// export default InputForm;"]},"metadata":{},"sourceType":"module"}