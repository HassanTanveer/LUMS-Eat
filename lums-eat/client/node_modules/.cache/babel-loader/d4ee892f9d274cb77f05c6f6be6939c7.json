{"ast":null,"code":"var _jsxFileName = \"/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import {compose} from 'redux';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions'; // import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { withRouter } from 'react-router-dom';\nimport './collection-item.styles.scss';\nimport { NotificationManager } from 'react-notifications'; // import { Link } from 'react-router-dom';\n\nconst CollectionItem = ({\n  item,\n  addItem,\n  history,\n  match\n}) => {\n  const {\n    name,\n    price,\n    imageurl\n  } = item;\n\n  let createNotification = type => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n\n        default:\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageurl})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Rs\", price)), localStorage.email ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: createNotification('info'),\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Add to cart\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => history.push('/login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(CollectionItem));","map":{"version":3,"sources":["/home/hassan/Desktop/NEW/LUMS-Eat/lums-eat/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","CustomButton","addItem","withRouter","NotificationManager","CollectionItem","item","history","match","name","price","imageurl","createNotification","type","info","success","warning","error","alert","backgroundImage","localStorage","email","push","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,+BAAP;AACA,SAAQC,mBAAR,QAAkC,qBAAlC,C,CACA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA,OAAR;AAAiBK,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAAuC;AAC5D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BL,IAAlC;;AACA,MAAIM,kBAAkB,GAAIC,IAAD,IAAU;AACjC,WAAO,MAAM;AACX,cAAQA,IAAR;AACE,aAAK,MAAL;AACET,UAAAA,mBAAmB,CAACU,IAApB,CAAyB,cAAzB;AACA;;AACF,aAAK,SAAL;AACEV,UAAAA,mBAAmB,CAACW,OAApB,CAA4B,iBAA5B,EAA+C,YAA/C;AACA;;AACF,aAAK,SAAL;AACEX,UAAAA,mBAAmB,CAACY,OAApB,CAA4B,iBAA5B,EAA+C,oBAA/C,EAAqE,IAArE;AACA;;AACF,aAAK,OAAL;AACEZ,UAAAA,mBAAmB,CAACa,KAApB,CAA0B,eAA1B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAClEC,YAAAA,KAAK,CAAC,UAAD,CAAL;AACD,WAFD;AAGF;;AACA;AAAUd,UAAAA,mBAAmB,CAACa,KAApB,CAA0B,eAA1B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAC5EC,YAAAA,KAAK,CAAC,UAAD,CAAL;AACD,WAFS;AAfZ;AAmBC,KApBH;AAqBC,GAtBH;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAMR,QAAS;AAD5B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADF,eAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BC,KAA3B,CAFF,CAPF,EAWGU,YAAY,CAACC,KAAb,gBACD,oBAAC,YAAD;AAAe,IAAA,OAAO,EAAIT,kBAAkB,CAAC,MAAD,CAA5C;AAAsD,IAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADC,gBAIA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAML,OAAO,CAACe,IAAR,CAAa,QAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfH,CADF;AAwBD,CAlDD;;AAoDA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,OAAO,EAAEI,IAAI,IAAIkB,QAAQ,CAACtB,OAAO,CAACI,IAAD,CAAR;AADa,CAAL,CAAnC;;AAMA,eAAeH,UAAU,CAACH,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkClB,cAAlC,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import {compose} from 'redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport './collection-item.styles.scss';\nimport {NotificationManager} from 'react-notifications';\n// import { Link } from 'react-router-dom';\n\nconst CollectionItem = ({ item, addItem, history, match }) => {\n  const { name, price, imageurl } = item;\n  let createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n        break\n        default : NotificationManager.error('Error message', 'Click me!', 5000, () => {\n          alert('callback');\n        });\n      }\n      };\n    }\n\n  return (\n    <div className='collection-item'>\n      <div\n        className='image'\n        style={{\n          backgroundImage: `url(${imageurl})`\n        }}\n      />\n      <div className='collection-footer'>\n        <span className='name'>{name}</span>\n        <span className='price'>Rs{price}</span>\n      </div>\n      {localStorage.email ?(\n      <CustomButton  onClick = {createNotification('info')} inverted>\n        Add to cart\n      </CustomButton>):\n      (<CustomButton onClick={()=>  history.push('/login') }   >\n        Add to cart\n      </CustomButton>\n    \n      )\n}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(CollectionItem))"]},"metadata":{},"sourceType":"module"}