{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\components\\\\directory\\\\directory.component.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from '../menu-item/menu-item.component';\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport Form from 'react-bootstrap/Form';\nimport './directory.styles.scss';\n\nclass Directory extends Component {\n  constructor() {\n    super();\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.state = {\n      sections: [],\n      search: ''\n    };\n  }\n\n  updateSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch('/restaurants').then(res => res.json()).then(sections => this.setState({\n      sections\n    }));\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    let filteredRestaurants = this.state.sections.filter(MenuItem => {\n      return MenuItem.name.toUpperCase().indexOf(this.state.search.toUpperCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"directory-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, user.name ? /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Hey there, \", user.name) : /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Hey there!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      block: true // className = 'search'\n      ,\n      placeholder: \"search...\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"directory-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, filteredRestaurants.map(({\n      _id,\n      ...otherSectionProps\n    }) => /*#__PURE__*/React.createElement(MenuItem, Object.assign({\n      key: _id\n    }, otherSectionProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nDirectory.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Directory);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/components/directory/directory.component.jsx"],"names":["React","Component","PropTypes","connect","MenuItem","logoutUser","Form","Directory","constructor","onLogoutClick","e","preventDefault","props","state","sections","search","updateSearch","event","setState","target","value","componentDidMount","fetch","then","res","json","render","user","auth","filteredRestaurants","filter","name","toUpperCase","indexOf","bind","map","_id","otherSectionProps","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from '../menu-item/menu-item.component';\r\nimport { logoutUser } from \"../../redux/actions/authActions\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './directory.styles.scss';\r\n\r\nclass Directory extends Component {  \r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n      this.state = {\r\n        sections: [],\r\n        search: ''\r\n      }\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({search: event.target.value})\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('/restaurants')\r\n    .then(res=> res.json())\r\n    .then(sections => this.setState({sections}))\r\n    \r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    let filteredRestaurants = this.state.sections.filter(\r\n      (MenuItem) => {\r\n        return MenuItem.name.toUpperCase().indexOf(this.state.search.toUpperCase()) !== -1;\r\n      }\r\n    )\r\n    return (\r\n      <div className='directory-menu'>\r\n        {user.name ? (\r\n          <b>Hey there, {user.name}</b>\r\n        ) : (\r\n          <b>Hey there!</b>\r\n        )}\r\n        <div className='search'>\r\n          {/* <input type = \"text\"\r\n              className = 'search'\r\n              placeholder = \"search...\"\r\n              value ={this.state.search} \r\n              onChange = {this.updateSearch.bind(this)}/> */}\r\n          <Form>\r\n              <Form.Control type=\"name\"\r\n                            block\r\n                            // className = 'search'\r\n                            placeholder=\"search...\"\r\n                            value ={this.state.search} \r\n                            onChange = {this.updateSearch.bind(this)}/>\r\n          </Form>\r\n        </div>\r\n        <hr/>\r\n        <div className='directory-menu'>\r\n          {filteredRestaurants.map(({ _id, ...otherSectionProps }) => (\r\n         \r\n            <MenuItem key={_id} {...otherSectionProps} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Directory);\r\n"]},"metadata":{},"sourceType":"module"}