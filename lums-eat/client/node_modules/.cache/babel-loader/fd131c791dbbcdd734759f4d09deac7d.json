{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LUMS-Eat\\\\lums-eat\\\\client\\\\src\\\\components\\\\header\\\\header.component.jsx\";\n// import React from 'react';\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; // import PropTypes from \"prop-types\";\n\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors'; // import {ReactComponent as Logo } from '../../assets/logo.svg';\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/LogoNew.svg\";\nimport { setUserLoading } from \"../../redux/actions/authActions\";\nimport './header.styles.scss'; // import { logoutUser } from \"../../redux/actions/authActions\";\n\nimport Logout from '../../components/logout/logout';\nconsole.log(localStorage.isRest);\n\nconst Header = ({\n  currentUser,\n  hidden,\n  check\n}) => {\n  let button;\n  let button2;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  console.log(localStorage);\n\n  if (!localStorage.isRest) {\n    if (localStorage.email) {\n      button = /*#__PURE__*/React.createElement(Link, {\n        className: \"option\",\n        to: \"/orders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }\n      }, \"ORDERS\");\n    } else {\n      button = /*#__PURE__*/React.createElement(Link, {\n        className: \"option\",\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"ORDERS\");\n    }\n  }\n\n  if (!localStorage.isRest) {\n    if (localStorage.email) {\n      button2 = /*#__PURE__*/React.createElement(Link, {\n        className: \"option\",\n        to: \"/change-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }\n      }, \"CHANGE USER INFORMATION\");\n    } else {\n      console.log(\" \");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, button, localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/analytics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"RESTAURANT ANALYTICS\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"RESTAURANT\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/menu-update\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"MENU AVAILABILITY\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"FEEDBACK\") : console.log('Not rest'), localStorage.isRest ? /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/add-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"ADD\") : console.log('Not rest'), localStorage.email ? /*#__PURE__*/React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  }, localStorage.name), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, button2), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Logout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }\n  })))) : /*#__PURE__*/React.createElement(Link, {\n    className: \"option\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"LOGIN\"), localStorage.isRest ? console.log('Not rest') : /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  })), hidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }\n  }));\n}; // Header.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   hidden: selectCartHidden\n// })\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: setUserLoading,\n  hidden: selectCartHidden\n});\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/LUMS-Eat/lums-eat/client/src/components/header/header.component.jsx"],"names":["React","useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Link","connect","createStructuredSelector","CartIcon","CartDropdown","selectCartHidden","setUserLoading","Logout","console","log","localStorage","isRest","Header","currentUser","hidden","check","button","button2","dropdownOpen","setDropdownOpen","toggle","prevState","email","name","mapStateToProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,YAArE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,wBAAR,QAAuC,UAAvC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAA+B,iCAA/B,C,CACA;;;AAEA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEAC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAzB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAoC;AAEjD,MAAIC,MAAJ;AACA,MAAIC,OAAJ;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMyB,MAAM,GAAG,MAAMD,eAAe,CAACE,SAAS,IAAI,CAACA,SAAf,CAApC;;AAEAb,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;;AAEE,MAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;AACxB,QAAGD,YAAY,CAACY,KAAhB,EAAuB;AACrBN,MAAAA,MAAM,gBAAG,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAT;AAGH,KAJC,MAKI;AACFA,MAAAA,MAAM,gBAAE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,EAAE,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAGD;AACF;;AAED,MAAI,CAACN,YAAY,CAACC,MAAlB,EAA0B;AACxB,QAAGD,YAAY,CAACY,KAAhB,EAAuB;AACrBL,MAAAA,OAAO,gBAAI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,EAAE,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAX;AAGH,KAJC,MAKI;AACFT,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;AACF;;AAEH,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,CAACC,MAAb,gBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAOC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,eAgBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECK,MAFD,EAIGN,YAAY,CAACC,MAAb,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADC,GAKAH,OAAO,CAACC,GAAR,CAAY,UAAZ,CATH,EAWGC,YAAY,CAACC,MAAb,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,GAKAH,OAAO,CAACC,GAAR,CAAY,UAAZ,CAhBH,EAmBGC,YAAY,CAACC,MAAb,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADC,GAKAH,OAAO,CAACC,GAAR,CAAY,UAAZ,CAxBH,EA0BGC,YAAY,CAACC,MAAb,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAKAH,OAAO,CAACC,GAAR,CAAY,UAAZ,CA/BH,EAkCCC,YAAY,CAACC,MAAb,gBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,GAKEH,OAAO,CAACC,GAAR,CAAY,UAAZ,CAvCH,EA0CEC,YAAY,CAACY,KAAb,gBACC,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEJ,YAAlB;AAAgC,IAAA,MAAM,EAAEE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,KAAK,EAAG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,YAAY,CAACa,IADd,CADF,eAIA,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeN,OAAf,CADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAc,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,CAFF,CAJA,CADD,gBAYA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtDF,EA4DCP,YAAY,CAACC,MAAb,GACEH,OAAO,CAACC,GAAR,CAAY,UAAZ,CADF,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/DF,CAhBF,EAqFGK,MAAM,GAAG,IAAH,gBAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArFnB,CADA;AA0FD,CA5HD,C,CAgIA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMU,eAAe,GAAGtB,wBAAwB,CAAC;AAC/CW,EAAAA,WAAW,EAACP,cADmC;AAE/CQ,EAAAA,MAAM,EAAET;AAFuC,CAAD,CAAhD;AAOA,eAAeJ,OAAO,CAACuB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\n// import PropTypes from \"prop-types\";\r\nimport CartIcon from '../cart-icon/cart-icon.component';\r\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\r\nimport {selectCartHidden} from '../../redux/cart/cart.selectors';\r\n// import {ReactComponent as Logo } from '../../assets/logo.svg';\r\nimport {ReactComponent as Logo } from '../../assets/LogoNew.svg';\r\nimport { setUserLoading } from \"../../redux/actions/authActions\";\r\nimport './header.styles.scss';\r\n// import { logoutUser } from \"../../redux/actions/authActions\";\r\nimport Logout from '../../components/logout/logout';\r\n\r\nconsole.log(localStorage.isRest)\r\n\r\n\r\nconst Header = ({ currentUser, hidden, check }) => {\r\n\r\n  let button\r\n  let button2\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  console.log(localStorage)\r\n  \r\n    if( !localStorage.isRest) {\r\n      if(localStorage.email) {\r\n        button=  <Link className='option' to='/orders'>\r\n        ORDERS\r\n      </Link>  \r\n    } \r\n      else{\r\n        button= <Link className='option' to='/login'>\r\n        ORDERS\r\n      </Link>  \r\n      }\r\n    }\r\n\r\n    if( !localStorage.isRest) {\r\n      if(localStorage.email) {\r\n        button2 =  <Link className='option' to='/change-info'>\r\n        CHANGE USER INFORMATION\r\n      </Link>  \r\n    } \r\n      else{\r\n        console.log(\" \")\r\n      }\r\n    }\r\n       \r\n  return(\r\n  <div className='header'>\r\n    {localStorage.isRest ? (\r\n      <Link className='logo-container' to='/restaurant'>\r\n        <Logo className='logo' />\r\n        {/* <Link className='title1' to='/restaurant'>{\"  \"} </Link>\r\n        <Link className='title1' to='/restaurant'>{\"LUMS\"}</Link>\r\n        <Link className='title' to='/restaurant'>{\"EAT\"}</Link> */}\r\n      </Link>) : (\r\n      <Link className='logo-container' to='/'>\r\n        <Logo className='logo' />\r\n        {/* <Link className='title1' to='/'>{\"  \"} </Link>\r\n        <Link className='title1' to='/'>{\"LUMS\"}</Link>\r\n        <Link className='title' to='/'>{\"EAT\"}</Link> */}\r\n      </Link>\r\n    )}\r\n\r\n    <div className='options'>\r\n\r\n    {button}      \r\n\r\n      {localStorage.isRest ?(\r\n      <Link className='option' to='/analytics'>\r\n        RESTAURANT ANALYTICS\r\n      </Link>\r\n      ) : \r\n      (console.log('Not rest')) }\r\n      \r\n      {localStorage.isRest ?(\r\n      <Link className='option' to='/restaurant'>\r\n        RESTAURANT\r\n      </Link>\r\n      ) : \r\n      (console.log('Not rest')) }\r\n\r\n      \r\n      {localStorage.isRest ?(\r\n      <Link className='option' to='/menu-update'>\r\n        MENU AVAILABILITY\r\n      </Link>\r\n      ) : \r\n      (console.log('Not rest')) } \r\n\r\n      {localStorage.isRest ?(\r\n      <Link className='option' to='/feedback'>\r\n        FEEDBACK\r\n      </Link>\r\n      ) : \r\n      (console.log('Not rest')) }  \r\n\r\n     \r\n    {localStorage.isRest ?(\r\n      <Link className='option' to='/add-menu'>\r\n        ADD\r\n      </Link>\r\n      ) : \r\n      (console.log('Not rest')) \r\n    }\r\n\r\n     {localStorage.email ? (\r\n       <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n         <DropdownToggle caret color = 'light'>\r\n         {localStorage.name}\r\n         </DropdownToggle>\r\n       <DropdownMenu right>\r\n         <DropdownItem>{button2}</DropdownItem>\r\n         <DropdownItem><Logout /></DropdownItem>\r\n       </DropdownMenu>\r\n     </Dropdown>\r\n     ):\r\n     (\r\n      <Link className='option' to='/login'>\r\n      LOGIN\r\n      </Link>\r\n     )}\r\n\r\n    \r\n    {localStorage.isRest ?(\r\n      (console.log('Not rest'))\r\n      ) : \r\n      <CartIcon />\r\n    }\r\n      \r\n    </div>\r\n    \r\n   \r\n    {hidden ? null : <CartDropdown />}\r\n  </div>\r\n\r\n  )\r\n};\r\n\r\n\r\n\r\n// Header.propTypes = {\r\n//   auth: PropTypes.object.isRequired,\r\n  \r\n// };\r\n// const mapStateToProps = state => ({\r\n//   auth: state.auth,\r\n//   hidden: selectCartHidden\r\n// })\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser:setUserLoading,\r\n  hidden: selectCartHidden,\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}